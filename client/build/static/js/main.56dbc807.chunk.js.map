{"version":3,"sources":["authProvider.js","reviews/reviewActions.js","reviews/reviewSaga.js","sagas.js","themeReducer.js","configuration/actions.js","layout/Logo.js","layout/AppBar.js","segments/data.js","visitors/SegmentsField.js","visitors/SegmentInput.js","visitors/AvatarField.js","visitors/FullNameField.js","visitors/CustomerLinkField.js","visitors/ColoredNumberField.js","visitors/MobileGrid.js","visitors/VisitorList.js","visitors/VisitorCreate.js","orders/NbItemsField.js","products/ProductReferenceField.js","reviews/StarRatingField.js","visitors/SegmentsInput.js","visitors/VisitorEdit.js","visitors/index.js","visitors/CustomerReferenceField.js","orders/MobileGrid.js","orders/OrderList.js","orders/Basket.js","orders/OrderEdit.js","orders/index.js","visitors/AddressField.js","invoices/InvoiceShow.js","invoices/InvoiceList.js","invoices/index.js","products/GridList.js","products/ProductList.js","products/Poster.js","products/ProductCreate.js","products/ProductEdit.js","products/index.js","categories/LinkToRelatedProducts.js","categories/CategoryList.js","products/ThumbnailField.js","products/ProductRefField.js","categories/CategoryEdit.js","categories/index.js","reviews/BulkAcceptButton.js","reviews/BulkRejectButton.js","reviews/ReviewListMobile.js","reviews/rowStyle.js","reviews/ReviewListDesktop.js","reviews/ReviewFilter.js","reviews/AcceptButton.js","reviews/RejectButton.js","reviews/ReviewEditToolbar.js","reviews/ReviewEdit.js","reviews/ReviewList.js","reviews/index.js","layout/SubMenu.js","layout/Menu.js","layout/themes.js","layout/Layout.js","layout/Login.js","dashboard/Welcome.js","dashboard/CardIcon.js","dashboard/MonthlyRevenue.js","dashboard/NbNewOrders.js","dashboard/PendingOrders.js","dashboard/PendingReviews.js","dashboard/NewCustomers.js","dashboard/Dashboard.js","dashboard/index.js","configuration/Configuration.js","segments/LinkToRelatedCustomers.js","segments/Segments.js","routes.js","i18n/en.js","dataProvider/index.js","fakeServer/index.js","App.js","index.js"],"names":["authProvider","type","params","AUTH_LOGIN","username","localStorage","setItem","Promise","resolve","AUTH_LOGOUT","removeItem","AUTH_ERROR","AUTH_CHECK","getItem","reject","REVIEW_APPROVE_FAILURE","REVIEW_REJECT_FAILURE","reviewSaga","regenerator_default","a","wrap","_context3","prev","next","all","takeEvery","mark","_callee","_ref","error","_context","console","stop","_callee2","_ref2","_context2","_marked","sagas","themeReducer","previousState","arguments","length","undefined","payload","Logo","props","react_default","createElement","Object","assign","width","height","viewBox","aria-label","style","lineHeight","fontWeight","fontSize","fontFamily","letterSpacing","wordSpacing","strokeWidth","fill","d","InkscapeFontSpecification","CustomUserMenu","translate","objectWithoutProperties","UserMenu","MenuItemLink","to","primaryText","leftIcon","Settings_default","withStyles","title","flex","textOverflow","whiteSpace","overflow","spacer","classes","AppBar","userMenu","Typography_default","variant","color","className","id","layout_Logo","segments_data","name","styles","main","display","flexWrap","chip","margin","TranslatedSegmentsField","record","groups","map","segment","Chip_default","key","label","segments","find","s","defaultProps","addLabel","source","TranslatedSegmentInput","compose","input","rest","SelectInput","choices","AvatarField","size","Avatar_default","src","concat","avatar","PureFullNameField","pure","_ref$record","alignItems","visitors_AvatarField","first_name","last_name","CustomerLinkField","Link","visitors_FullNameField","ColoredNumberField","WrappedComponent","Colored","displayName","colored","NumberField","MobileGrid","ids","data","basePath","Card_default","card","CardHeader_default","cardTitleContent","EditButton","resource","CardContent_default","cardContent","DateField","parseInt","nb_commands","visitors_ColoredNumberField","options","currency","visitors_SegmentsField","enhance","theme","flexDirection","justifyContent","objectSpread","typography","body1","VisitorFilter","Filter","SearchInput","alwaysOn","DateInput","NullableBooleanInput","defaultValue","visitors_SegmentInput","List","filters","VisitorList_VisitorFilter","sort","field","order","perPage","Responsive","xsmall","visitors_MobileGrid","medium","Datagrid","visitors_CustomerLinkField","showTime","BooleanField","marginLeft","email","address","maxWidth","zipcode","city","comment","Create","TabbedForm","FormTab","TextInput","autoFocus","formClassName","validation","fullWidth","path","LongTextInput","render","basket","NbItemsField","FunctionField","textAlign","ProductReferenceField","ReferenceField","reference","TextField","opacity","StarRatingField","Array","rating","_","i","Stars_default","TranslatedSegmentsInput","addField","SelectArrayInput","VisitorTitle","src_visitors","list","VisitorList","create","VisitorCreate","edit","Edit","VisitorEdit_VisitorTitle","ReferenceManyField","target","orders_NbItemsField","filter","status","products_ProductReferenceField","reviews_StarRatingField","cellClassName","padding","visitors_SegmentsInput","icon","VisitorIcon","CustomerReferenceField","cardContentRow","visitors_CustomerReferenceField","total","OrderFilter","ReferenceInput","AutocompleteInput","optionText","choice","TabbedDatagrid","tabs","state","ordered","delivered","cancelled","handleChange","event","value","_this$props","_this","filterValues","setFilters","_this$props2","this","react","Tabs_default","centered","indicatorColor","onChange","Tab_default","Divider_default","orders_MobileGrid","defineProperty","React","Component","StyledTabbedDatagrid","OrderList","filterDefaultValues","Basket","fetchData","crudGetMany","item","product_id","products","Paper_default","container","Table_default","TableHead_default","TableRow_default","TableCell_default","rightAlignedCell","TableBody_default","price","toLocaleString","quantity","colSpan","total_ex_taxes","delivery_fees","tax_rate","boldCell","classnames","minWidth","connect","productId","admin","resources","r","reduce","crudGetManyAction","OrderTitle","src_orders","root","aside","orders_Basket","SimpleForm","disabled","BooleanInput","OrderIcon","AddressField","CustomerField","InvoiceShow","ShowController","Grid_default","spacing","xs","gutterBottom","align","linkType","InvoiceShow_CustomerField","Date","date","toLocaleDateString","ListFilters","invoices","InvoiceList_ListFilters","rowClick","expand","invoices_InvoiceShow","visitors_AddressField","InvoiceIcon","getColsForWidth","LoadingGridList","nbChildren","fn","_ref$nbItems","nbItems","GridList_default","cellHeight","cols","gridList","GridListTile_default","placeholder","from","LoadedGridList","component","linkToRecord","thumbnail","alt","GridListTileBar_default","tileBar","subtitle","withWidth","background","backgroundColor","palette","grey","link","_ref3","loadedOnce","GridList_LoadedGridList","GridList_LoadingGridList","QuickFilter","marginBottom","ProductFilter","NumberInput","ProductList","ProductList_ProductFilter","products_GridList","Poster","marginTop","zIndex","content","&:last-child","img","maxHeight","image","stock","widthFormGroup","heightFormGroup","validate","required","allowEmpty","esm","ProductTitle","createStyles","src_products","ProductCreate","ProductEdit_ProductTitle","products_Poster","pagination","Pagination","ProductIcon","paddingRight","Button_default","pathname","search","stringify","page","JSON","category_id","categories_LinkToRelatedProducts","ThumbnailField","ProductRefField","es_Link","CategoryTitle","smart_count","categories","CategoryList","products_ThumbnailField","products_ProductRefField","minimumFractionDigits","CategoryIcon","BulkAcceptButton","handleClick","startUndoable","selectedIds","crudUpdateMany","button_Button","onClick","ThumbUp_default","BulkRejectButton","ThumbDown_default","ReviewMobileList","_ref$classes","isLoading","List_default","ListItem_default","button","ListItemAvatar_default","ListItemText_default","primary","inline","secondary","secondaryTypographyProps","noWrap","hasBulkActions","textDecoration","rowStyle","index","defaultStyle","borderLeftColor","green","borderLeftWidth","borderLeftStyle","orange","red","headerRow","sideEffects","onSuccess","notification","body","level","redirectTo","onFailure","selector","formValueSelector","Mutation","approve","RejectButton","handleReject","reviewReject","meta","fetch","UPDATE","handleSubmitWithRedirect","invalid","saving","Toolbar_default","reviews_AcceptButton","reviews_RejectButton","SaveButton","redirect","submitOnEnter","DeleteButton","_form","paddingTop","form","breakpoints","up","down","inlineField","onCancel","EditController","controllerProps","IconButton_default","Close_default","save","version","toolbar","reviews_ReviewEditToolbar","rowsMax","ReviewsBulkActionButtons","reviews_BulkAcceptButton","reviews_BulkRejectButton","BulkDeleteButton","ReviewList","handleClose","push","_this2","Route","match","isMatch","listWithDrawer","bulkActionButtons","ReviewList_ReviewsBulkActionButtons","reviews_ReviewFilter","ReviewListMobile","reviews_ReviewListDesktop","Drawer_default","open","anchor","onClose","paper","drawerPaper","reviews_ReviewEdit","flexGrow","transition","transitions","duration","enteringScreen","marginRight","src_reviews","ReviewIcon","listItem","paddingLeft","listItemText","sidebarIsOpen","sidebarIsClosed","handleToggle","isOpen","children","dense","ListItemIcon_default","ExpandMore_default","inset","Collapse_default","in","timeout","unmountOnExit","disablePadding","Menu","menuCatalog","menuSales","menuCustomers","menu","setState","onMenuClick","logout","DashboardMenuItem","layout_SubMenu","menuCustomer","Label_default","small","withRouter","ui","sidebarOpen","locale","i18n","darkTheme","lightTheme","light","dark","contrastText","CustomSidebar","Sidebar","Layout","appBar","sidebar","renderInput","_ref$meta","touched","inputProps","esm_extends","TextField_default","helperText","Login","login","auth","userLogin","location","nextPathname","handleSubmit","Lock_default","onSubmit","hint","Field","CardActions_default","actions","CircularProgress_default","thickness","Notification","EnhancedLogin","reduxForm","values","errors","password","loading","minHeight","backgroundRepeat","backgroundSize","LoginWithTheme","core_styles","createMuiTheme","mediaUrl","Math","random","media","CardMedia_default","href","Home_default","Code_default","float","borderRadius","Icon","bgColor","dashboard_CardIcon","DollarIcon","ShoppingCartIcon","cost","text","_ref$orders","orders","_ref$customers","customers","customer_id","nb_items","customer_name","ListItemSecondaryAction_default","query","titleLink","overflowY","WebkitLineClamp","WebkitBoxOrient","_ref$reviews","reviews","nb","CommentIcon","_ref$visitors","visitors","CustomerIcon","flexColumn","leftCol","rightCol","singleCol","Dashboard","prevProps","fetchOrders","fetchReviews","fetchCustomers","dataProvider","aMonthAgo","setDate","getDate","GET_LIST","date_gte","toISOString","recentOrders","aggregations","stats","revenue","nbNewOrders","pendingOrders","maximumFractionDigits","GET_MANY","pendingOrdersCustomers","customer","nbPendingReviews","pendingReviews","slice","min","review","pendingReviewsCustomers","has_ordered","first_seen_gte","newCustomers","nbNewCustomers","_this$state","dashboard_Welcome","dashboard_MonthlyRevenue","dashboard_NbNewOrders","dashboard_PendingOrders","dashboard_PendingReviews","dashboard_NewCustomers","viewVersion","withDataProvider","changeLocale","changeTheme","Title","segments_LinkToRelatedCustomers","routes","es_Route","exact","Configuration","Segments","en","englishMessages","pos","configuration","language","dashboard","monthly_revenue","new_orders","pending_reviews","new_customers","pending_orders","items","welcome","aor_button","demo_button","sales","catalog","fields","commands","last_seen_gte","total_spent","identity","delete","delivery","sum","unit_price","date_lte","total_gte","returned","command_id","height_gte","height_lte","stock_lte","width_gte","width_lte","details","description","detail","action","accept","approved_success","approved_error","rejected_success","rejected_error","compulsive","collector","ordered_once","regular","returns","reviewer","src_dataProvider","__webpack_require__","e","then","bind","factory","default","provider","fakeServer","i18nProvider","messages","App","fakeServerFactory","process","REACT_APP_DATA_PROVIDER","restoreFetch","dataProviderFactory","log","Admin","customReducers","customSagas","customRoutes","loginPage","appLayout","Resource","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.56dbc807.chunk.js","sourcesContent":["import { AUTH_LOGIN, AUTH_LOGOUT, AUTH_CHECK, AUTH_ERROR } from 'react-admin';\n\nexport default (type, params) => {\n    if (type === AUTH_LOGIN) {\n        const { username } = params;\n        localStorage.setItem('username', username);\n        // accept all username/password combinations\n        return Promise.resolve();\n    }\n    if (type === AUTH_LOGOUT) {\n        localStorage.removeItem('username');\n        return Promise.resolve();\n    }\n    if (type === AUTH_ERROR) {\n        return Promise.resolve();\n    }\n    if (type === AUTH_CHECK) {\n        return localStorage.getItem('username')\n            ? Promise.resolve()\n            : Promise.reject();\n    }\n    return Promise.reject('Unkown method');\n};\n","import { UPDATE } from 'react-admin';\n\nexport const REVIEW_APPROVE = 'REVIEW_APPROVE';\nexport const REVIEW_APPROVE_LOADING = 'REVIEW_APPROVE_LOADING';\nexport const REVIEW_APPROVE_FAILURE = 'REVIEW_APPROVE_FAILURE';\nexport const REVIEW_APPROVE_SUCCESS = 'REVIEW_APPROVE_SUCCESS';\n\nexport const reviewApprove = (id, data, basePath) => ({\n    type: REVIEW_APPROVE,\n    payload: { id, data: { ...data, status: 'accepted' }, basePath },\n    meta: {\n        resource: 'reviews',\n        fetch: UPDATE,\n        onSuccess: {\n            notification: {\n                body: 'resources.reviews.notification.approved_success',\n                level: 'info',\n            },\n            redirectTo: '/reviews',\n            basePath,\n        },\n        onFailure: {\n            notification: {\n                body: 'resources.reviews.notification.approved_error',\n                level: 'warning',\n            },\n        },\n    },\n});\n\nexport const REVIEW_REJECT = 'REVIEW_REJECT';\nexport const REVIEW_REJECT_LOADING = 'REVIEW_REJECT_LOADING';\nexport const REVIEW_REJECT_FAILURE = 'REVIEW_REJECT_FAILURE';\nexport const REVIEW_REJECT_SUCCESS = 'REVIEW_REJECT_SUCCESS';\n\nexport const reviewReject = (id, data, basePath) => ({\n    type: REVIEW_REJECT,\n    payload: { id, data: { ...data, status: 'rejected' }, basePath },\n    meta: {\n        resource: 'reviews',\n        fetch: UPDATE,\n        onSuccess: {\n            notification: {\n                body: 'resources.reviews.notification.rejected_success',\n                level: 'info',\n            },\n            redirectTo: '/reviews',\n            basePath,\n        },\n        onFailure: {\n            notification: {\n                body: 'resources.reviews.notification.rejected_error',\n                level: 'warning',\n            },\n        },\n    },\n});\n","import { all, takeEvery } from 'redux-saga/effects';\nimport { REVIEW_APPROVE_FAILURE, REVIEW_REJECT_FAILURE } from './reviewActions';\n\nexport default function* reviewSaga() {\n    yield all([\n        takeEvery(REVIEW_APPROVE_FAILURE, function*({ error }) {\n            console.error(error);\n            yield all([]);\n        }),\n        takeEvery(REVIEW_REJECT_FAILURE, function*({ error }) {\n            console.error(error);\n            yield all([]);\n        }),\n    ]);\n}\n","import reviewSaga from './reviews/reviewSaga';\n\nexport default [reviewSaga];\n","import { CHANGE_THEME } from './configuration/actions';\n\nexport default (previousState = 'light', { type, payload }) => {\n    if (type === CHANGE_THEME) {\n        return payload;\n    }\n    return previousState;\n};\n","export const CHANGE_THEME = 'CHANGE_THEME';\n\nexport const changeTheme = theme => ({\n    type: CHANGE_THEME,\n    payload: theme,\n});\n","import React from 'react';\n\nconst Logo = props => (\n    <svg width={234.532} height={20.475} viewBox=\"0 0 62.053 5.417\" {...props}>\n        <g\n            aria-label=\"~Posters Galore~\"\n            style={{\n                lineHeight: 1.25,\n            }}\n            fontWeight={400}\n            fontSize={7.056}\n            fontFamily=\"Permanent Marker\"\n            letterSpacing={0}\n            wordSpacing={0}\n            strokeWidth={0.265}\n            fill=\"#fff\"\n        >\n            <path\n                d=\"M.227 3.659Q.124 3.652.062 3.61 0 3.562 0 3.486q0-.068.062-.124.041-.103.083-.165L.24 3.06q.07-.096.138-.193.069-.096.152-.193.04-.034.068-.048.076-.055.152-.103.076-.055.172-.09.173-.062.338-.062.165-.007.282 0 .097.007.18.02.09.008.151.022.103.048.165.09.07.04.131.096.076.04.118.09.048.04.082.089.02.027.083.09.062.061.151.061.083 0 .138-.075.062-.076.124-.131.055-.145.18-.22.055-.028.089-.035l.076-.014q.02-.007.041-.007l.035-.014.075-.007h.09q.117-.034.207-.034.103.007.165.055.062.041.062.117 0 .076-.062.124-.041.11-.09.172-.04.062-.09.131l-.137.193q-.069.097-.158.193-.028.035-.07.048-.068.056-.144.11-.076.049-.172.083-.18.062-.345.07-.158 0-.275-.008l-.186-.013q-.083-.014-.152-.028-.096-.048-.165-.09-.07-.04-.131-.09-.076-.047-.117-.089-.042-.048-.076-.096-.02-.028-.09-.09-.069-.069-.144-.062-.076.007-.145.083-.062.069-.124.124-.041.138-.172.22-.056.028-.097.035l-.069.014-.041.013q-.02 0-.035.007l-.075.007h-.09q-.117.035-.207.035zM4.417 3.225q.007-.028.027-.021.028 0 .048-.007-.055-.055-.068-.145-.014-.096-.07-.158.014-.035.021-.069.014-.034.062-.028-.02-.151.007-.282.028-.131.083-.248.062-.117.138-.228.082-.117.158-.234.062-.014.076.014.014.02.048-.014.11-.076.152-.165.041-.097.041-.207.062-.179.138-.351.083-.18.186-.331.103-.152.22-.262.118-.117.255-.179.097-.083.242-.152.151-.068.316-.103.173-.041.352-.041.179-.007.33.034.035.014.042-.014Q7.228 0 7.255 0q.345.041.614.138.275.096.468.269.131.206.248.447.117.235.18.496.068.255.061.531-.007.276-.117.551-.241.303-.585.49-.345.179-.745.303-.392.117-.82.193-.42.075-.82.165.007.186 0 .4-.006.206-.048.42-.034.207-.11.406-.069.2-.193.372-.138-.006-.29.028-.144.034-.261.069l-.11-.069q-.049-.028-.124-.034.02-.083-.042-.173-.055-.09-.117-.172-.055-.09-.076-.172-.013-.09.083-.159-.055-.048-.055-.151.028.027.069.027-.014-.124.027-.296.049-.172.076-.338.035-.172.014-.31-.02-.144-.165-.206zm1.791-1.613l-.048.138q-.014.055-.035.103-.02.049-.048.097l-.048.11q.014.042.055.062.041.02.055.062.097-.048.193-.069.097-.027.193-.041.096-.014.193-.035.096-.02.2-.068.103-.049.213-.076l.228-.07q.11-.034.213-.075.104-.048.18-.124-.097-.09-.29-.158-.193-.07-.42-.083-.22-.02-.448.028-.22.048-.386.2zM12.506 3.1q-.007.083.013.16.021.075.049.15.034.07.062.145.027.076.041.152.014.096 0 .214-.014.11-.048.22-.035.103-.09.193-.055.083-.13.124-.097.124-.235.193-.138.069-.255.165-.076.048-.172.07l-.186.04q-.076.042-.18.09l-.213.083q-.11.034-.22.055-.11.014-.193.007-.207.076-.407.096-.193.028-.455-.027-.248.034-.461-.021-.207-.055-.372-.172-.159-.124-.283-.29-.117-.172-.193-.358-.055-.393.028-.71.083-.323.234-.592.159-.276.358-.503.2-.234.386-.455.042.014.062 0 .028-.02.048-.048.021-.035.042-.062.027-.028.062-.035.048-.103.138-.151.096-.055.151-.152.062-.014.104-.041.04-.028.075-.062.042-.035.083-.062.041-.035.097-.048v-.076q.124-.055.179-.124l.144-.18q.062-.006.097-.006.041 0 .117-.014.055-.096.096-.145.049-.048.138-.103.083.041.18.055.103.014.178.09.007.069.042.11.034.034.076.069.041.027.075.062.042.034.056.096.027.007.034-.007.014-.013.041-.007.021.097.049.131.027.028.055.117-.035.07-.055.145-.014.07-.083.104-.007.048.027.055.035 0 .042.034.007.062-.02.09.164.268.295.572.131.296.297.565zm-.862.655q.028-.076.07-.124.048-.048.054-.145-.034-.055-.04-.082-.008-.035-.008-.104-.151-.213-.262-.454-.11-.248-.248-.462-.013.028-.048.055-.034.028-.076-.014-.013.055-.048.083-.034.02-.076.02-.041-.006-.09-.02-.04-.02-.075-.048-.2.158-.4.31-.2.151-.358.351-.028.014-.034.014-.007-.007-.042.007-.055.13-.138.241-.075.103-.151.214-.076.11-.131.234-.055.124-.062.29.117.096.276.116.158.021.323.007.173-.013.331-.041.165-.034.303-.034.29-.07.496-.18.207-.117.434-.234zM12.898 2.067q.049-.145.152-.248.11-.103.234-.172.131-.076.269-.124t.262-.083q.275-.117.585-.22.317-.11.641-.193.331-.083.676-.104.344-.027.723.083.02.069.062.13l.083.125q.048.062.082.124.035.055.042.117.069.062.11.138.041.069.014.186-.07.055-.138.103-.062.042-.138.076-.255-.062-.517-.041-.261.02-.468.034-.062-.062-.152-.062-.082 0-.179.028l-.186.055q-.09.027-.172.014-.07.055-.172.075-.097.014-.214.028-.007.034.014.048.02.007.007.042.041.048.103.068l.138.042q.076.02.13.055.056.027.076.096.104 0 .18.049.075.048.124.117.048.069.069.151.027.076.027.138.02.055.048.048.028-.007.062.028.021.09.104.186.082.09.13.2.014.172.021.31.007.13-.048.269-.103.254-.29.454-.178.2-.413.359-.227.151-.489.261-.262.11-.51.186-.027-.006-.055 0-.027.007-.014-.034-.055.048-.124.062-.062.014-.138.007-.075 0-.158-.007-.076-.007-.145.007-.048-.048-.09-.097-.034-.04-.054-.11-.035 0-.035-.034.007-.035-.02-.035.04-.069.034-.076 0-.013-.02-.02l-.028-.014q-.014-.014-.007-.034.027-.056.02-.124l-.013-.152q-.007-.076.007-.145.02-.069.103-.11.234.028.44-.014.215-.048.4-.13.187-.083.352-.18.172-.096.338-.172.02-.062.055-.103.041-.042.082-.076.042-.035.076-.076.035-.041.048-.103.007-.049-.027-.055-.028-.014-.028-.056l-.076-.02q-.13-.076-.296-.124-.165-.055-.282-.117-.076.04-.145.02-.062-.02-.165-.041-.235-.014-.455-.048-.214-.035-.414-.124-.013-.035-.034-.062-.02-.028-.076-.014-.041-.055-.082-.103-.042-.056-.076-.118.014-.082.02-.137.007-.062-.04-.118.027-.09.04-.144.014-.055 0-.145z\"\n                style={{\n                    InkscapeFontSpecification: \"'Permanent Marker'\",\n                }}\n            />\n            <path\n                d=\"M19.988 1.853q-.172 0-.372.028-.2.02-.392.048-.138.02-.27.035-.123.013-.226.02-.049.152-.097.27-.048.116-.103.226-.055.118-.104.242-.041.117-.082.255-.07.11-.117.206-.042.09-.07.207-.082.103-.123.22-.042.11-.062.193l-.028.083q-.041.041-.048.069-.007.02-.035.041-.007.076-.048.152-.014.034-.02.069-.007.027-.007.041 0 .069-.035.09.007.034 0 .075l-.014.07q-.02.082-.013.13l.034.049q.02.02.028.055.04.027.062.034.027.02.082.048l.062.07q.035.199-.062.316-.103.131-.351.131h-.083q-.034-.034-.041-.055l-.09-.034q-.034-.014-.062-.056-.09-.04-.144-.068l-.062-.035v-.083q-.049-.062-.076-.137-.02-.076-.035-.152-.013-.062-.034-.117-.014-.055-.041-.097-.014-.4.075-.675.09-.275.186-.53l.11-.276q.056-.145.097-.296l.062-.07.076-.178.069-.152q.02-.048.034-.09l.035-.082q-.042 0-.076.007-.035 0-.069.007l-.076.013h-.069q-.048 0-.069-.006-.075.034-.165.034H17.019q-.014-.007-.028-.007-.069 0-.11.02h-.228q-.013 0-.034.008h-.034q-.049 0-.104-.007-.055-.014-.117-.048-.082-.11-.11-.118l-.062-.082q-.007-.042-.02-.076-.014-.041-.028-.09-.028-.069-.055-.144-.021-.083-.021-.193.007-.055.028-.083l.034-.048.02-.104.09.007h.193q.22 0 .448-.013l.469-.042.275-.027.296-.028q.028-.062.056-.117l.068-.034q.124-.007.173.034.055.034.09.069l.302-.028q.159-.02.317-.048.235-.034.469-.062.241-.027.462-.027.096 0 .186.006.09.007.165.021l.069.048q.02.042.055.076l.083.069q.082.076.165.18.083.103.062.302-.055.083-.083.097l-.062.082-.069-.006q-.04 0-.075.013-.035.007-.07.021l-.054.028-.062.013h-.104q-.034-.007-.076-.007z\"\n                style={{\n                    InkscapeFontSpecification: \"'Permanent Marker'\",\n                }}\n            />\n            <path\n                d=\"M23.303 1.288q.007.049 0 .076 0 .02-.007.042v.048q0 .02.014.069-.145.234-.338.324-.186.082-.407.124-.22.034-.454.075-.228.042-.455.18-.09-.035-.166 0-.068.034-.206.02-.042.042-.104.062-.062.014-.124.035.028.062.021.13 0 .063.02.104.242.02.531-.007.297-.028.58-.034.006.034-.008.048-.014.007-.007.034.049.035.097.09l.096.096q.048.049.097.083.055.028.124.02.027.056.034.125.014.062-.014.13-.11.076-.22.159-.11.076-.234.138-.118.062-.255.103-.131.035-.297.028h-.055q-.014 0-.041-.02-.055.034-.159.02-.096-.014-.151.02-.076-.034-.186-.027-.104 0-.186-.028-.11.145-.2.31-.09.166-.159.352.235.034.386.027.159-.007.297-.02.137-.021.282-.035.145-.02.365-.014.138-.075.324-.096.193-.028.352-.083.055.021.096.076.041.048.076.097.041.04.082.075.042.035.104.028.027.027.034.069.014.034.02.069.008.034.022.062.02.02.062.013-.104.228-.242.352-.13.117-.303.179-.172.062-.386.096-.206.035-.461.083-.062.014-.104-.007-.04-.014-.096-.014-.158.035-.379.062-.22.028-.448.021-.227-.007-.434-.062-.207-.048-.338-.179-.055-.048-.075-.11-.014-.07-.09-.104-.007-.09-.027-.2l-.042-.227q-.02-.124-.034-.24-.007-.118.014-.215.02-.103.082-.186.07-.082.048-.179.035-.007.042-.034.007-.035.055-.028.041-.124.09-.234.048-.11.096-.214.055-.103.103-.206.055-.11.104-.241-.097-.09-.145-.193-.041-.11-.062-.214-.02-.11-.035-.22-.013-.118-.048-.235.07-.103.166-.165.103-.069.22-.11.117-.042.255-.07.138-.027.29-.061.275-.09.489-.138.22-.048.427-.076.213-.034.44-.062.228-.027.518-.083.062.062.117.062.027-.062.062-.034.041.02.034-.041.07.117.172.2.11.075.242.13zM24.185 4.451q-.076.276-.138.42-.055.138-.172.29-.09-.014-.125.02-.034.035-.075.062-.062.014-.09 0-.027-.013-.048-.034-.02-.014-.055-.034-.028-.014-.09-.014-.014-.055-.034-.104-.014-.048-.09-.034.014-.055.007-.09-.007-.041-.02-.069l-.014-.062q-.007-.034.007-.082-.035 0-.056-.048-.02-.049-.048-.097.02-.124.042-.234.02-.11.048-.207.034-.096.055-.193.02-.096-.02-.2.027.021.04-.007.014-.034.021-.082.007-.055.007-.104 0-.055-.007-.09.07-.178.11-.364.049-.193.083-.38.041-.185.083-.364.041-.18.11-.331.076-.014.165.02.097.028.118.076.179-.138.317-.33.137-.2.282-.386.145-.186.317-.331.18-.145.448-.172.138.103.303.213.172.104.282.276.056.027.09.062.041.028.097.062v.083q.082.075.13.179.056.096.097.213l.083.228q.04.11.096.213-.014.035-.014.062 0 .021.007.049.014.027.02.055.008.027 0 .076-.02.303-.199.489-.172.186-.42.31-.248.117-.53.2-.283.082-.51.179 0 .027.02.027.028 0 .02.035.166.103.262.165.097.062.18.103.09.042.186.076.103.028.282.07.18.04.276.068.103.02.186.041l.165.028.248.02q.062.063.104.152.048.083.062.172.013.083.006.166-.006.076-.048.124.007.02.028.02.027-.006.055 0-.041.028-.069.07l-.055.082q-.028.041-.062.069-.035.034-.097.041-.213.083-.537.007-.324-.069-.82-.262-.248-.096-.406-.165-.152-.076-.27-.145-.11-.075-.206-.158l-.22-.2zm.985-2.363q-.076.11-.172.2-.09.09-.18.186-.082.09-.151.206-.069.11-.097.262.242-.027.503-.13.262-.111.496-.208-.027-.213-.151-.344-.117-.13-.248-.172zM27.01 2.067q.048-.145.151-.248.11-.103.234-.172.131-.076.27-.124.137-.048.26-.083.277-.117.587-.22.317-.11.64-.193.331-.083.676-.104.344-.027.723.083.02.069.062.13l.083.125q.048.062.082.124.035.055.042.117.069.062.11.138.041.069.014.186-.07.055-.138.103-.062.042-.138.076-.255-.062-.517-.041-.261.02-.468.034-.062-.062-.152-.062-.082 0-.179.028l-.186.055q-.09.027-.172.014-.069.055-.172.075-.097.014-.214.028-.007.034.014.048.02.007.007.042.041.048.103.068l.138.042q.076.02.13.055.056.027.077.096.103 0 .179.049.076.048.124.117t.069.151q.027.076.027.138.02.055.048.048.028-.007.062.028.021.09.104.186.083.09.13.2.015.172.021.31.007.13-.048.269-.103.254-.29.454-.178.2-.413.359-.227.151-.489.261-.262.11-.51.186-.027-.006-.055 0-.027.007-.014-.034-.055.048-.124.062-.062.014-.137.007-.076 0-.159-.007-.076-.007-.145.007-.048-.048-.09-.097-.034-.04-.054-.11-.035 0-.035-.034.007-.035-.02-.035.04-.069.034-.076 0-.013-.02-.02l-.028-.014q-.014-.014-.007-.034.027-.056.02-.124l-.013-.152q-.007-.076.007-.145.02-.069.103-.11.234.028.441-.014.214-.048.4-.13.186-.083.351-.18.172-.096.338-.172.02-.062.055-.103.041-.042.082-.076.042-.035.076-.076.035-.041.048-.103.007-.049-.027-.055-.028-.014-.028-.056l-.075-.02q-.131-.076-.297-.124-.165-.055-.282-.117-.076.04-.145.02-.062-.02-.165-.041-.235-.014-.455-.048-.214-.035-.413-.124-.014-.035-.035-.062-.02-.028-.076-.014-.041-.055-.082-.103-.042-.056-.076-.118.014-.082.02-.137.007-.062-.04-.118.027-.09.04-.144.014-.055 0-.145zM32.797 3.535q0-.076.021-.138.02-.062.007-.159.213-.454.482-.84.276-.393.655-.69.062-.047.096-.096.042-.055.076-.103.041-.048.09-.083.048-.041.124-.055.172-.2.413-.365.241-.165.503-.317t.524-.31q.268-.159.482-.345.076.049.117.035.048-.02.097-.007.062.13.158.186.103.048.207.103.11.049.2.124.096.07.144.193-.048 0-.048.035.007.034.02.076.014.04.014.075 0 .035-.062.035 0 .048.049.048.048 0 .048.048 0 .042-.02.07-.015.02 0 .075-.166.11-.373.214l-.427.206q-.22.11-.455.241-.227.124-.455.29-.227.165-.461.365-.228.2-.441.427-.214.22-.4.462-.186.234-.317.461.014.035.035.062.027.028.041.063.262.013.49 0 .227-.021.454.027.028-.02.034-.055.007-.035.042-.048.468-.049.875-.152.406-.11.827-.22-.124-.049-.22-.076-.042-.041 0-.069.047-.034.075-.069-.11-.062-.186-.165-.069-.104-.083-.269.049-.041.049-.096 0-.056-.049-.09-.034-.014-.041 0l-.014.027q0 .014-.014.028-.007.014-.034 0 .007-.076.034-.124.028-.048.042-.117l.572-.38q.09.07.22.146.131.075.276.151.144.076.296.159.152.075.282.151.125.055.214.138.09.076.172.165l.166.166q.082.082.2.138-.014.11.013.179.028.069.014.165-.13.234-.317.4-.186.158-.42.275-.228.117-.49.2-.261.076-.537.152-.275.069-.558.151-.276.076-.544.18-.117 0-.2.006-.083.007-.159.021l-.151.028q-.076.013-.165.02-.035-.007-.049.014-.007.02-.027.035-.138.02-.248.02h-.186q-.097 0-.2.028-.104.027-.193.02-.62-.027-.972-.44-.351-.414-.385-1.137.006-.035-.014-.042-.02-.014-.035-.027z\"\n                style={{\n                    InkscapeFontSpecification: \"'Permanent Marker'\",\n                }}\n            />\n            <path\n                d=\"M42.01 4.589q-.042.117-.125.241-.075.117-.186.214-.103.09-.234.151-.13.062-.275.07-.09-.022-.124-.05-.028-.02-.062-.04-.021-.014-.042-.021-.014-.014-.027-.02l-.083-.035.028-.09q.013-.055-.007-.083-.021-.034-.083-.09l-.041-.04q-.021-.021-.035-.042l-.117-.13.186-.049q.172-.048.227-.124.062-.076.049-.255-.138-.027-.235-.007-.09.02-.186.048-.124.035-.255.062-.124.021-.275.021h-.104l-.103-.014-.069-.013q-.014-.076-.027-.083l-.028-.028q-.034-.034-.076-.09-.034-.061-.013-.15-.035-.063-.042-.125-.041.083-.062.172l-.027.07-.07.013q-.013.007-.02.035-.007.02-.007.034l-.034.117-.028.028q-.014.007-.027.02-.014.062-.035.124-.02.062-.041.118-.035.09-.062.179-.02.082-.014.165l-.028.076q-.034.041-.075.069l-.083.041q-.014.014-.041.028l-.035.013-.02.076-.083.014-.11.02q-.028.008-.07.008l-.068-.007-.117-.097q-.042-.041-.097-.076-.062-.082-.069-.124l-.014-.075q-.013-.042-.013-.07-.007-.027-.021-.04l-.09-.083.076-.062.007-.117q.138-.352.29-.676l.323-.661q.056-.11.104-.22l.11-.221q-.007-.02-.007-.048t.014-.062q.076-.118.124-.207l.096-.193q.055-.117.11-.227.063-.11.152-.228l.11-.048.049-.014q.027-.014.062-.014l.103.014q.193-.09.338-.248.144-.165.296-.393l.069-.096.09.055q.034.02.096.041.062.014.13.035.125.027.235.062.11.034.18.103.04.11.047.166.007.055.021.11.02.117.035.234.02.117.027.262.035.117.055.234.028.11.048.228l.07.323q.034.152.089.29.055 0 .069.007.034-.014.069-.021l.09-.014.075-.007.028.07q.007.034.069.068.09.007.13.042.042.027.076.062.028.027.055.04l.104.042-.055.104q-.07.124-.2.24-.124.111-.283.187.007.041.007.082.007.035.02.076.022.117.035.241.014.124 0 .255zm-1.992-1.192q.207-.014.372-.028.173-.02.38-.062-.049-.206-.104-.427-.055-.227-.117-.448l-.042.07q-.137.144-.268.323-.124.18-.214.338l-.083.124q-.04.062-.075.124.041-.007.075-.007.042 0 .076-.007zM44.29 5.092q-.193.062-.42.124-.228.062-.455.062-.344 0-.544-.172-.035-.076-.062-.104l-.042-.055q-.013-.034-.02-.09-.083-.096-.131-.22-.048-.13-.07-.262-.013-.138-.006-.275.014-.138.048-.262.014-.028.014-.055l.014-.062q.027-.11.055-.214.034-.103.09-.179-.028-.062 0-.138.027-.076.061-.138.097-.261.159-.44.069-.187.138-.366.117-.31.22-.613.104-.303.186-.655.055-.034.083-.048.041-.014.069-.02.124.062.29.124.165.055.275.055.055.034.069.055l.027.027q.076.09.131.186.055.09.035.242-.042.062-.062.062-.035.137-.076.234-.035.096-.076.193-.048.103-.09.206-.04.104-.068.255-.028.035-.042.062-.007.028-.02.062-.014.035-.035.076-.014.035-.048.062-.02.18-.069.29-.041.11-.09.22-.082.2-.151.4-.062.2-.076.454.035-.013.062-.013h.062q.062 0 .145.02.207-.11.448-.13.248-.021.489-.028H45q.096 0 .179-.014.062.035.076.041h.055q.048 0 .083.007.082.076.158.11.076.035.159.063.075.027.144.062.076.027.145.082l.048.297q.048.062.041.082 0 .055-.027.083l.014.076q-.104.02-.145.048-.034.027-.069.062-.055.007-.083.007h-.04q-.097 0-.235.034-.186-.062-.386-.062-.076 0-.159.007l-.165.014q-.083.014-.172.02-.083.008-.172.008zM50.25 3.1q-.007.083.014.16.02.075.048.15.035.07.062.145.028.076.041.152.014.096 0 .214-.013.11-.048.22-.034.103-.09.193-.054.083-.13.124-.097.124-.235.193-.137.069-.254.165-.076.048-.173.07l-.186.04q-.076.042-.179.09l-.213.083q-.11.034-.221.055-.11.014-.193.007-.207.076-.406.096-.193.028-.455-.027-.248.034-.462-.021-.207-.055-.372-.172-.158-.124-.282-.29-.118-.172-.193-.358-.055-.393.027-.71.083-.323.235-.592.158-.276.358-.503.2-.234.386-.455.041.014.062 0 .027-.02.048-.048.02-.035.041-.062.028-.028.062-.035.048-.103.138-.151.097-.055.152-.152.062-.014.103-.041.041-.028.076-.062.041-.035.082-.062.042-.035.097-.048v-.076q.124-.055.18-.124l.144-.18q.062-.006.096-.006.042 0 .117-.014.056-.096.097-.145.048-.048.138-.103.082.041.179.055.103.014.179.09.007.069.041.11.035.034.076.069.041.027.076.062.041.034.055.096.028.007.034-.007.014-.013.042-.007.02.097.048.131.028.028.055.117-.034.07-.055.145-.014.07-.083.104-.007.048.028.055.034 0 .041.034.007.062-.02.09.165.268.296.572.13.296.296.565zm-.861.655q.027-.076.069-.124.048-.048.055-.145-.035-.055-.041-.082-.007-.035-.007-.104-.152-.213-.262-.454-.11-.248-.248-.462-.014.028-.048.055-.035.028-.076-.014-.014.055-.048.083-.035.02-.076.02-.042-.006-.09-.02-.041-.02-.076-.048-.2.158-.4.31-.2.151-.358.351-.027.014-.034.014-.007-.007-.041.007-.055.13-.138.241-.076.103-.152.214-.076.11-.13.234-.056.124-.063.29.118.096.276.116.158.021.324.007.172-.013.33-.041.166-.034.304-.034.29-.07.496-.18.207-.117.434-.234zM51.78 4.451q-.076.276-.138.42-.055.138-.172.29-.09-.014-.124.02-.035.035-.076.062-.062.014-.09 0-.027-.013-.048-.034-.02-.014-.055-.034-.028-.014-.09-.014-.013-.055-.034-.104-.014-.048-.09-.034.014-.055.007-.09-.007-.041-.02-.069l-.014-.062q-.007-.034.007-.082-.034 0-.055-.048-.02-.049-.048-.097.02-.124.04-.234.022-.11.05-.207.034-.096.054-.193.02-.096-.02-.2.027.021.04-.007.015-.034.022-.082.007-.055.007-.104 0-.055-.007-.09.068-.178.11-.364.048-.193.082-.38l.083-.364q.041-.18.11-.331.076-.014.166.02.096.028.117.076.179-.138.317-.33.138-.2.282-.386.145-.186.317-.331.18-.145.448-.172.138.103.303.213.173.104.283.276.055.027.09.062.04.028.096.062v.083q.083.075.13.179.056.096.097.213.042.11.083.228.041.11.097.213-.014.035-.014.062 0 .021.007.049.014.027.02.055.007.027 0 .076-.02.303-.2.489-.172.186-.42.31-.248.117-.53.2-.283.082-.51.179 0 .027.02.027.028 0 .021.035.166.103.262.165.097.062.18.103.089.042.185.076.104.028.283.07.179.04.275.068.104.02.186.041l.166.028.248.02q.062.063.103.152.048.083.062.172.014.083.007.166-.007.076-.048.124.007.02.028.02.027-.006.055 0-.042.028-.07.07l-.054.082q-.028.041-.062.069-.035.034-.097.041-.213.083-.537.007-.324-.069-.82-.262-.248-.096-.407-.165-.151-.076-.268-.145-.11-.075-.207-.158l-.22-.2zm.985-2.363q-.076.11-.172.2-.09.09-.18.186-.082.09-.15.206-.07.11-.097.262.24-.027.503-.13.261-.111.496-.208-.028-.213-.152-.344-.117-.13-.248-.172zM58.332 1.288q.007.049 0 .076 0 .02-.007.042v.048q0 .02.014.069-.145.234-.337.324-.186.082-.407.124-.22.034-.455.075-.227.042-.454.18-.09-.035-.166 0-.069.034-.207.02-.04.042-.103.062-.062.014-.124.035.028.062.02.13 0 .063.021.104.242.02.531-.007.296-.028.579-.034.007.034-.007.048-.014.007-.007.034.048.035.096.09l.097.096q.048.049.096.083.055.028.124.02.028.056.035.125.014.062-.014.13-.11.076-.22.159-.11.076-.235.138-.117.062-.255.103-.13.035-.296.028h-.055q-.014 0-.041-.02-.056.034-.159.02-.096-.014-.152.02-.075-.034-.186-.027-.103 0-.186-.028-.11.145-.2.31-.089.166-.158.352.234.034.386.027.158-.007.296-.02.138-.021.283-.035.144-.02.365-.014.138-.075.324-.096.193-.028.351-.083.055.021.097.076.041.048.075.097.042.04.083.075.041.035.104.028.027.027.034.069.014.034.02.069.008.034.021.062.021.02.062.013-.103.228-.24.352-.132.117-.304.179-.172.062-.386.096-.206.035-.461.083-.062.014-.104-.007-.041-.014-.096-.014-.159.035-.38.062-.22.028-.447.021-.227-.007-.434-.062-.207-.048-.338-.179-.055-.048-.076-.11-.013-.07-.09-.104-.006-.09-.027-.2l-.041-.227q-.02-.124-.035-.24-.007-.118.014-.215.02-.103.083-.186.069-.082.048-.179.035-.007.041-.034.007-.035.056-.028.04-.124.09-.234.047-.11.096-.214.055-.103.103-.206.055-.11.103-.241-.096-.09-.144-.193-.042-.11-.062-.214-.021-.11-.035-.22-.014-.118-.048-.235.069-.103.165-.165.104-.069.22-.11.118-.042.256-.07.138-.027.29-.061.275-.09.488-.138.22-.048.427-.076.214-.034.441-.062.228-.027.517-.083.062.062.117.062.028-.062.062-.034.042.02.035-.041.069.117.172.2.11.075.241.13zM58.394 3.659q-.103-.007-.165-.049-.062-.048-.062-.124 0-.068.062-.124.041-.103.083-.165l.096-.138q.07-.096.138-.193.069-.096.152-.193.04-.034.068-.048.076-.055.152-.103.076-.055.172-.09.173-.062.338-.062.165-.007.282 0 .097.007.18.02.09.008.151.022.104.048.166.09.068.04.13.096.076.04.118.09.048.04.082.089.021.027.083.09.062.061.152.061.082 0 .137-.075.062-.076.124-.131.056-.145.18-.22.055-.028.09-.035l.075-.014q.02-.007.041-.007.021-.007.035-.014l.076-.007h.09q.116-.034.206-.034.103.007.165.055.062.041.062.117 0 .076-.062.124-.041.11-.09.172-.04.062-.089.131l-.138.193q-.069.097-.158.193-.028.035-.07.048-.068.056-.144.11-.076.049-.172.083-.18.062-.345.07-.158 0-.275-.008l-.186-.013q-.083-.014-.152-.028-.096-.048-.165-.09-.07-.04-.131-.09-.076-.047-.117-.089-.042-.048-.076-.096-.02-.028-.09-.09-.069-.069-.144-.062-.076.007-.145.083-.062.069-.124.124-.041.138-.172.22-.055.028-.097.035l-.069.014-.041.013q-.02 0-.035.007l-.075.007h-.09q-.117.035-.207.035z\"\n                style={{\n                    InkscapeFontSpecification: \"'Permanent Marker'\",\n                }}\n            />\n        </g>\n    </svg>\n);\n\nexport default Logo;\n","import React from 'react';\nimport { AppBar, UserMenu, MenuItemLink, translate } from 'react-admin';\nimport Typography from '@material-ui/core/Typography';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Logo from './Logo';\n\nconst styles = {\n    title: {\n        flex: 1,\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n    },\n    spacer: {\n        flex: 1,\n    },\n};\n\nconst CustomUserMenu = translate(({ translate, ...props }) => (\n    <UserMenu {...props}>\n        <MenuItemLink\n            to=\"/configuration\"\n            primaryText={translate('pos.configuration')}\n            leftIcon={<SettingsIcon />}\n        />\n    </UserMenu>\n));\n\nconst CustomAppBar = ({ classes, ...props }) => (\n    <AppBar {...props} userMenu={<CustomUserMenu />}>\n        <Typography\n            variant=\"title\"\n            color=\"inherit\"\n            className={classes.title}\n            id=\"react-admin-title\"\n        />\n        <Logo />\n        <span className={classes.spacer} />\n    </AppBar>\n);\n\nexport default withStyles(styles)(CustomAppBar);\n","export default [\n    { id: 'compulsive', name: 'resources.segments.data.compulsive' },\n    { id: 'collector', name: 'resources.segments.data.collector' },\n    { id: 'ordered_once', name: 'resources.segments.data.ordered_once' },\n    { id: 'regular', name: 'resources.segments.data.regular' },\n    { id: 'returns', name: 'resources.segments.data.returns' },\n    { id: 'reviewer', name: 'resources.segments.data.reviewer' },\n];\n","import React from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport { translate } from 'react-admin';\nimport segments from '../segments/data';\n\nconst styles = {\n    main: { display: 'flex', flexWrap: 'wrap' },\n    chip: { margin: 4 },\n};\n\nconst SegmentsField = ({ record, translate }) => (\n    <span style={styles.main}>\n        {record.groups &&\n            record.groups.map(segment => (\n                <Chip\n                    key={segment}\n                    style={styles.chip}\n                    label={translate(segments.find(s => s.id === segment).name)}\n                />\n            ))}\n    </span>\n);\n\nconst TranslatedSegmentsField = translate(SegmentsField);\n\nTranslatedSegmentsField.defaultProps = {\n    addLabel: true,\n    source: 'groups',\n};\n\nexport default TranslatedSegmentsField;\n","import React from 'react';\nimport { translate, SelectInput } from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport compose from 'recompose/compose';\n\nimport segments from '../segments/data';\n\nconst styles = {\n    input: { width: 150 },\n};\n\nconst SegmentInput = ({ classes, translate, ...rest }) => (\n    <SelectInput\n        {...rest}\n        choices={segments.map(segment => ({\n            id: segment.id,\n            name: translate(segment.name),\n        }))}\n        className={classes.input}\n    />\n);\n\nconst TranslatedSegmentInput = compose(\n    translate,\n    withStyles(styles)\n)(SegmentInput);\n\nTranslatedSegmentInput.defaultProps = {\n    source: 'groups',\n};\n\nexport default TranslatedSegmentInput;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst AvatarField = ({ record, size }) => (\n    <Avatar\n        src={`${record.avatar}?size=${size}x${size}`}\n        size={size}\n        style={{ width: size, height: size }}\n    />\n);\n\nAvatarField.defaultProps = {\n    size: 25,\n};\n\nexport default AvatarField;\n","import React from 'react';\nimport AvatarField from './AvatarField';\nimport pure from 'recompose/pure';\n\nconst FullNameField = ({ record = {}, size }) => (\n    <div style={{ display: 'flex', flexWrap: 'nowrap', alignItems: 'center' }}>\n        <AvatarField record={record} size={size} />\n        &nbsp;{record.first_name} {record.last_name}\n    </div>\n);\n\nconst PureFullNameField = pure(FullNameField);\n\nPureFullNameField.defaultProps = {\n    source: 'last_name',\n    label: 'resources.customers.fields.name',\n};\n\nexport default PureFullNameField;\n","import React from 'react';\nimport { Link } from 'react-admin';\n\nimport FullNameField from './FullNameField';\n\nconst CustomerLinkField = props => (\n    <Link to={`/customers/${props.record.id}`}>\n        <FullNameField {...props} />\n    </Link>\n);\n\nCustomerLinkField.defaultProps = {\n    source: 'customer_id',\n    addLabel: true,\n};\n\nexport default CustomerLinkField;\n","import React from 'react';\nimport { NumberField } from 'react-admin';\n\nconst colored = WrappedComponent => {\n    const Colored = props =>\n        props.record[props.source] > 500 ? (\n            <span style={{ color: 'red' }}>\n                <WrappedComponent {...props} />\n            </span>\n        ) : (\n            <WrappedComponent {...props} />\n        );\n\n    Colored.displayName = `Colored(${WrappedComponent.displayName})`;\n\n    return Colored;\n};\n\nconst ColoredNumberField = colored(NumberField);\nColoredNumberField.defaultProps = NumberField.defaultProps;\n\nexport default ColoredNumberField;\n","// in src/comments.js\nimport React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport { withStyles } from '@material-ui/core/styles';\nimport { DateField, EditButton, translate, NumberField } from 'react-admin';\n\nimport AvatarField from './AvatarField';\nimport ColoredNumberField from './ColoredNumberField';\nimport SegmentsField from './SegmentsField';\n\nconst listStyles = theme => ({\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '0.5rem 0',\n    },\n    cardTitleContent: {\n        display: 'flex',\n        flexDirection: 'rows',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    cardContent: {\n        ...theme.typography.body1,\n        display: 'flex',\n        flexDirection: 'column',\n    },\n});\n\nconst MobileGrid = ({ classes, ids, data, basePath, translate }) => (\n    <div style={{ margin: '1em' }}>\n        {ids.map(id => (\n            <Card key={id} className={classes.card}>\n                <CardHeader\n                    title={\n                        <div className={classes.cardTitleContent}>\n                            <h2>{`${data[id].first_name} ${\n                                data[id].last_name\n                            }`}</h2>\n                            <EditButton\n                                resource=\"visitors\"\n                                basePath={basePath}\n                                record={data[id]}\n                            />\n                        </div>\n                    }\n                    avatar={<AvatarField record={data[id]} size=\"45\" />}\n                />\n                <CardContent className={classes.cardContent}>\n                    <div>\n                        {translate('resources.customers.fields.last_seen_gte')}\n                        &nbsp;\n                        <DateField\n                            record={data[id]}\n                            source=\"last_seen\"\n                            type=\"date\"\n                        />\n                    </div>\n                    <div>\n                        {translate(\n                            'resources.commands.name',\n                            parseInt(data[id].nb_commands, 10) || 1\n                        )}\n                        &nbsp;:&nbsp;\n                        <NumberField\n                            record={data[id]}\n                            source=\"nb_commands\"\n                            label=\"resources.customers.fields.commands\"\n                            className={classes.nb_commands}\n                        />\n                    </div>\n                    <div>\n                        {translate('resources.customers.fields.total_spent')}\n                        &nbsp; :{' '}\n                        <ColoredNumberField\n                            record={data[id]}\n                            source=\"total_spent\"\n                            options={{ style: 'currency', currency: 'USD' }}\n                        />\n                    </div>\n                </CardContent>\n                {data[id].groups && data[id].groups.length > 0 && (\n                    <CardContent className={classes.cardContent}>\n                        <SegmentsField record={data[id]} />\n                    </CardContent>\n                )}\n            </Card>\n        ))}\n    </div>\n);\n\nMobileGrid.defaultProps = {\n    data: {},\n    ids: [],\n};\n\nconst enhance = compose(\n    withStyles(listStyles),\n    translate\n);\n\nexport default enhance(MobileGrid);\n","import React from 'react';\nimport {\n    BooleanField,\n    Datagrid,\n    DateField,\n    DateInput,\n    EditButton,\n    Filter,\n    List,\n    NullableBooleanInput,\n    NumberField,\n    Responsive,\n    SearchInput,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport SegmentsField from './SegmentsField';\nimport SegmentInput from './SegmentInput';\nimport CustomerLinkField from './CustomerLinkField';\nimport ColoredNumberField from './ColoredNumberField';\nimport MobileGrid from './MobileGrid';\n\nconst VisitorFilter = props => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <DateInput source=\"last_seen_gte\" />\n        <NullableBooleanInput source=\"has_ordered\" />\n        <NullableBooleanInput source=\"has_newsletter\" defaultValue />\n        <SegmentInput />\n    </Filter>\n);\n\nconst styles = {\n    nb_commands: { color: 'purple' },\n};\n\nconst VisitorList = ({ classes, ...props }) => (\n    <List\n        {...props}\n        filters={<VisitorFilter />}\n        sort={{ field: 'last_seen', order: 'DESC' }}\n        perPage={25}\n    >\n        <Responsive\n            xsmall={<MobileGrid />}\n            medium={\n                <Datagrid>\n                    <CustomerLinkField />\n                    <DateField source=\"last_seen\" type=\"date\" />\n                    <NumberField\n                        source=\"nb_commands\"\n                        label=\"resources.customers.fields.commands\"\n                        className={classes.nb_commands}\n                    />\n                    <ColoredNumberField\n                        source=\"total_spent\"\n                        options={{ style: 'currency', currency: 'USD' }}\n                    />\n                    <DateField source=\"latest_purchase\" showTime />\n                    <BooleanField source=\"has_newsletter\" label=\"News.\" />\n                    <SegmentsField />\n                    <EditButton />\n                </Datagrid>\n            }\n        />\n    </List>\n);\n\nexport default withStyles(styles)(VisitorList);\n","import React from 'react';\nimport {\n    Create,\n    DateInput,\n    FormTab,\n    LongTextInput,\n    TabbedForm,\n    TextInput,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nexport const styles = {\n    first_name: { display: 'inline-block' },\n    last_name: { display: 'inline-block', marginLeft: 32 },\n    email: { width: 544 },\n    address: { maxWidth: 544 },\n    zipcode: { display: 'inline-block' },\n    city: { display: 'inline-block', marginLeft: 32 },\n    comment: {\n        maxWidth: '20em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n};\n\nconst VisitorCreate = ({ classes, ...props }) => (\n    <Create {...props}>\n        <TabbedForm>\n            <FormTab label=\"resources.customers.tabs.identity\">\n                <TextInput\n                    autoFocus\n                    source=\"first_name\"\n                    formClassName={classes.first_name}\n                />\n                <TextInput\n                    source=\"last_name\"\n                    formClassName={classes.last_name}\n                />\n                <TextInput\n                    type=\"email\"\n                    source=\"email\"\n                    validation={{ email: true }}\n                    fullWidth={true}\n                    formClassName={classes.email}\n                />\n                <DateInput source=\"birthday\" />\n            </FormTab>\n            <FormTab label=\"resources.customers.tabs.address\" path=\"address\">\n                <LongTextInput\n                    source=\"address\"\n                    formClassName={classes.address}\n                />\n                <TextInput source=\"zipcode\" formClassName={classes.zipcode} />\n                <TextInput source=\"city\" formClassName={classes.city} />\n            </FormTab>\n        </TabbedForm>\n    </Create>\n);\n\nexport default withStyles(styles)(VisitorCreate);\n","import React from 'react';\nimport { FunctionField } from 'react-admin';\n\nconst render = record => record.basket.length;\n\nconst NbItemsField = props => <FunctionField {...props} render={render} />;\n\nNbItemsField.defaultProps = {\n    label: 'Nb Items',\n    textAlign: 'right',\n};\n\nexport default NbItemsField;\n","import React from 'react';\nimport { ReferenceField, TextField } from 'react-admin';\n\nconst ProductReferenceField = props => (\n    <ReferenceField\n        label=\"Product\"\n        source=\"product_id\"\n        reference=\"products\"\n        {...props}\n    >\n        <TextField source=\"reference\" />\n    </ReferenceField>\n);\n\nProductReferenceField.defaultProps = {\n    source: 'product_id',\n    addLabel: true,\n};\n\nexport default ProductReferenceField;\n","import React from 'react';\nimport Icon from '@material-ui/icons/Stars';\n\nconst style = { opacity: 0.87, width: 20, height: 20 };\n\nconst StarRatingField = ({ record }) => (\n    <span>\n        {Array(record.rating)\n            .fill(true)\n            .map((_, i) => (\n                <Icon key={i} style={style} />\n            ))}\n    </span>\n);\n\nStarRatingField.defaultProps = {\n    label: 'resources.reviews.fields.rating',\n    source: 'rating',\n    addLabel: true,\n};\n\nexport default StarRatingField;\n","import React from 'react';\nimport { translate, SelectArrayInput } from 'react-admin';\n\nimport segments from '../segments/data';\n\nconst SegmentsInput = ({ translate, addField, ...rest }) => (\n    <SelectArrayInput\n        {...rest}\n        choices={segments.map(segment => ({\n            id: segment.id,\n            name: translate(segment.name),\n        }))}\n    />\n);\n\nconst TranslatedSegmentsInput = translate(SegmentsInput);\n\nTranslatedSegmentsInput.defaultProps = {\n    addField: true,\n    source: 'groups',\n};\n\nexport default TranslatedSegmentsInput;\n","import React from 'react';\nimport {\n    Datagrid,\n    DateField,\n    DateInput,\n    Edit,\n    EditButton,\n    FormTab,\n    LongTextInput,\n    NullableBooleanInput,\n    NumberField,\n    ReferenceManyField,\n    TabbedForm,\n    TextField,\n    TextInput,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport NbItemsField from '../orders/NbItemsField';\nimport ProductReferenceField from '../products/ProductReferenceField';\nimport StarRatingField from '../reviews/StarRatingField';\nimport FullNameField from './FullNameField';\nimport SegmentsInput from './SegmentsInput';\nimport { styles } from './VisitorCreate';\n\nconst VisitorTitle = ({ record }) =>\n    record ? <FullNameField record={record} size={32} /> : null;\n\nconst VisitorEdit = ({ classes, ...props }) => (\n    <Edit title={<VisitorTitle />} {...props}>\n        <TabbedForm>\n            <FormTab label=\"resources.customers.tabs.identity\">\n                <TextInput\n                    source=\"first_name\"\n                    formClassName={classes.first_name}\n                />\n                <TextInput\n                    source=\"last_name\"\n                    formClassName={classes.last_name}\n                />\n                <TextInput\n                    type=\"email\"\n                    source=\"email\"\n                    validation={{ email: true }}\n                    fullWidth={true}\n                    formClassName={classes.email}\n                />\n                <DateInput source=\"birthday\" />\n            </FormTab>\n            <FormTab label=\"resources.customers.tabs.address\" path=\"address\">\n                <LongTextInput\n                    source=\"address\"\n                    formClassName={classes.address}\n                />\n                <TextInput source=\"zipcode\" formClassName={classes.zipcode} />\n                <TextInput source=\"city\" formClassName={classes.city} />\n            </FormTab>\n            <FormTab label=\"resources.customers.tabs.orders\" path=\"orders\">\n                <ReferenceManyField\n                    addLabel={false}\n                    sort={{ field: 'date', order: 'DESC' }}\n                    reference=\"commands\"\n                    target=\"customer_id\"\n                >\n                    <Datagrid>\n                        <DateField source=\"date\" />\n                        <TextField source=\"reference\" />\n                        <NbItemsField />\n                        <NumberField\n                            source=\"total\"\n                            options={{ style: 'currency', currency: 'USD' }}\n                        />\n                        <TextField source=\"status\" />\n                        <EditButton />\n                    </Datagrid>\n                </ReferenceManyField>\n            </FormTab>\n            <FormTab label=\"resources.customers.tabs.reviews\" path=\"reviews\">\n                <ReferenceManyField\n                    addLabel={false}\n                    sort={{ field: 'date', order: 'DESC' }}\n                    reference=\"reviews\"\n                    target=\"customer_id\"\n                >\n                    <Datagrid filter={{ status: 'approved' }}>\n                        <DateField source=\"date\" />\n                        <ProductReferenceField />\n                        <StarRatingField />\n                        <TextField\n                            source=\"comment\"\n                            cellClassName={classes.comment}\n                        />\n                        <EditButton style={{ padding: 0 }} />\n                    </Datagrid>\n                </ReferenceManyField>\n            </FormTab>\n            <FormTab label=\"resources.customers.tabs.stats\" path=\"stats\">\n                <SegmentsInput />\n                <NullableBooleanInput source=\"has_newsletter\" />\n                <DateField\n                    source=\"first_seen\"\n                    style={{ width: 128, display: 'inline-block' }}\n                />\n                <DateField\n                    source=\"latest_purchase\"\n                    style={{ width: 128, display: 'inline-block' }}\n                />\n                <DateField\n                    source=\"last_seen\"\n                    style={{ width: 128, display: 'inline-block' }}\n                />\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n);\n\nexport default withStyles(styles)(VisitorEdit);\n","import VisitorIcon from '@material-ui/icons/People';\n\nimport VisitorList from './VisitorList';\nimport VisitorCreate from './VisitorCreate';\nimport VisitorEdit from './VisitorEdit';\n\nexport default {\n    list: VisitorList,\n    create: VisitorCreate,\n    edit: VisitorEdit,\n    icon: VisitorIcon,\n};\n","import React from 'react';\nimport { ReferenceField } from 'react-admin';\n\nimport FullNameField from './FullNameField';\n\nconst CustomerReferenceField = props => (\n    <ReferenceField source=\"customer_id\" reference=\"customers\" {...props}>\n        <FullNameField />\n    </ReferenceField>\n);\n\nCustomerReferenceField.defaultProps = {\n    source: 'customer_id',\n    addLabel: true,\n};\n\nexport default CustomerReferenceField;\n","// in src/comments.js\nimport React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport {\n    DateField,\n    EditButton,\n    translate,\n    NumberField,\n    TextField,\n    BooleanField,\n} from 'react-admin';\n\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\n\nconst listStyles = theme => ({\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        margin: '0.5rem 0',\n    },\n    cardTitleContent: {\n        display: 'flex',\n        flexDirection: 'rows',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    cardContent: theme.typography.body1,\n    cardContentRow: {\n        display: 'flex',\n        flexDirection: 'rows',\n        alignItems: 'center',\n        margin: '0.5rem 0',\n    },\n});\n\nconst MobileGrid = ({ classes, ids, data, basePath, translate }) => (\n    <div style={{ margin: '1em' }}>\n        {ids.map(id => (\n            <Card key={id} className={classes.card}>\n                <CardHeader\n                    title={\n                        <div className={classes.cardTitleContent}>\n                            <span>\n                                {translate('resources.commands.name', 1)}:&nbsp;\n                                <TextField\n                                    record={data[id]}\n                                    source=\"reference\"\n                                />\n                            </span>\n                            <EditButton\n                                resource=\"commands\"\n                                basePath={basePath}\n                                record={data[id]}\n                            />\n                        </div>\n                    }\n                />\n                <CardContent className={classes.cardContent}>\n                    <span className={classes.cardContentRow}>\n                        {translate('resources.customers.name', 1)}:&nbsp;\n                        <CustomerReferenceField\n                            record={data[id]}\n                            basePath={basePath}\n                        />\n                    </span>\n                    <span className={classes.cardContentRow}>\n                        {translate('resources.reviews.fields.date')}:&nbsp;\n                        <DateField record={data[id]} source=\"date\" showTime />\n                    </span>\n                    <span className={classes.cardContentRow}>\n                        {translate('resources.commands.fields.basket.total')}\n                        :&nbsp;\n                        <NumberField\n                            record={data[id]}\n                            source=\"total\"\n                            options={{ style: 'currency', currency: 'USD' }}\n                            className={classes.total}\n                        />\n                    </span>\n                    <span className={classes.cardContentRow}>\n                        {translate('resources.commands.fields.status')}:&nbsp;\n                        <TextField source=\"status\" record={data[id]} />\n                    </span>\n                    <span className={classes.cardContentRow}>\n                        {translate('resources.commands.fields.returned')}:&nbsp;\n                        <BooleanField record={data[id]} source=\"returned\" />\n                    </span>\n                </CardContent>\n            </Card>\n        ))}\n    </div>\n);\n\nMobileGrid.defaultProps = {\n    data: {},\n    ids: [],\n};\n\nconst enhance = compose(\n    withStyles(listStyles),\n    translate\n);\n\nexport default enhance(MobileGrid);\n","import React, { Fragment } from 'react';\nimport {\n    AutocompleteInput,\n    BooleanField,\n    Datagrid,\n    DateField,\n    DateInput,\n    EditButton,\n    Filter,\n    List,\n    NullableBooleanInput,\n    NumberField,\n    ReferenceInput,\n    Responsive,\n    SearchInput,\n    TextField,\n    TextInput,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Divider from '@material-ui/core/Divider';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport NbItemsField from './NbItemsField';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport MobileGrid from './MobileGrid';\n\nconst filterStyles = {\n    status: { width: 150 },\n};\n\nconst OrderFilter = withStyles(filterStyles)(({ classes, ...props }) => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <ReferenceInput source=\"customer_id\" reference=\"customers\">\n            <AutocompleteInput\n                optionText={choice =>\n                    `${choice.first_name} ${choice.last_name}`\n                }\n            />\n        </ReferenceInput>\n        <DateInput source=\"date_gte\" />\n        <DateInput source=\"date_lte\" />\n        <TextInput source=\"total_gte\" />\n        <NullableBooleanInput source=\"returned\" />\n    </Filter>\n));\n\nconst datagridStyles = {\n    total: { fontWeight: 'bold' },\n};\n\nclass TabbedDatagrid extends React.Component {\n    tabs = [\n        { id: 'ordered', name: 'ordered' },\n        { id: 'delivered', name: 'delivered' },\n        { id: 'cancelled', name: 'cancelled' },\n    ];\n\n    state = { ordered: [], delivered: [], cancelled: [] };\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.ids !== state[props.filterValues.status]) {\n            return { ...state, [props.filterValues.status]: props.ids };\n        }\n        return null;\n    }\n\n    handleChange = (event, value) => {\n        const { filterValues, setFilters } = this.props;\n        setFilters({ ...filterValues, status: value });\n    };\n\n    render() {\n        const { classes, filterValues, ...props } = this.props;\n        return (\n            <Fragment>\n                <Tabs\n                    fullWidth\n                    centered\n                    value={filterValues.status}\n                    indicatorColor=\"primary\"\n                    onChange={this.handleChange}\n                >\n                    {this.tabs.map(choice => (\n                        <Tab\n                            key={choice.id}\n                            label={choice.name}\n                            value={choice.id}\n                        />\n                    ))}\n                </Tabs>\n                <Divider />\n                <Responsive\n                    xsmall={\n                        <MobileGrid\n                            {...props}\n                            ids={this.state[filterValues.status]}\n                        />\n                    }\n                    medium={\n                        <div>\n                            {filterValues.status === 'ordered' && (\n                                <Datagrid {...props} ids={this.state.ordered}>\n                                    <DateField source=\"date\" showTime />\n                                    <TextField source=\"reference\" />\n                                    <CustomerReferenceField />\n                                    <NbItemsField />\n                                    <NumberField\n                                        source=\"total\"\n                                        options={{\n                                            style: 'currency',\n                                            currency: 'USD',\n                                        }}\n                                        className={classes.total}\n                                    />\n                                    <EditButton />\n                                </Datagrid>\n                            )}\n                            {filterValues.status === 'delivered' && (\n                                <Datagrid {...props} ids={this.state.delivered}>\n                                    <DateField source=\"date\" showTime />\n                                    <TextField source=\"reference\" />\n                                    <CustomerReferenceField />\n                                    <NbItemsField />\n                                    <NumberField\n                                        source=\"total\"\n                                        options={{\n                                            style: 'currency',\n                                            currency: 'USD',\n                                        }}\n                                        className={classes.total}\n                                    />\n                                    <BooleanField source=\"returned\" />\n                                    <EditButton />\n                                </Datagrid>\n                            )}\n                            {filterValues.status === 'cancelled' && (\n                                <Datagrid {...props} ids={this.state.cancelled}>\n                                    <DateField source=\"date\" showTime />\n                                    <TextField source=\"reference\" />\n                                    <CustomerReferenceField />\n                                    <NbItemsField />\n                                    <NumberField\n                                        source=\"total\"\n                                        options={{\n                                            style: 'currency',\n                                            currency: 'USD',\n                                        }}\n                                        className={classes.total}\n                                    />\n                                    <BooleanField source=\"returned\" />\n                                    <EditButton />\n                                </Datagrid>\n                            )}\n                        </div>\n                    }\n                />\n            </Fragment>\n        );\n    }\n}\n\nconst StyledTabbedDatagrid = withStyles(datagridStyles)(TabbedDatagrid);\n\nconst OrderList = ({ classes, ...props }) => (\n    <List\n        {...props}\n        filterDefaultValues={{ status: 'ordered' }}\n        sort={{ field: 'date', order: 'DESC' }}\n        perPage={25}\n        filters={<OrderFilter />}\n    >\n        <StyledTabbedDatagrid />\n    </List>\n);\n\nexport default OrderList;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Link, translate, crudGetMany as crudGetManyAction } from 'react-admin';\nimport compose from 'recompose/compose';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n    container: { minWidth: '35em', marginLeft: '1em' },\n    rightAlignedCell: { textAlign: 'right' },\n    boldCell: { fontWeight: 'bold' },\n};\n\nclass Basket extends Component {\n    componentDidMount() {\n        this.fetchData();\n    }\n    fetchData() {\n        const {\n            record: { basket },\n            crudGetMany,\n        } = this.props;\n        crudGetMany('products', basket.map(item => item.product_id));\n    }\n    render() {\n        const { classes, record, products, translate } = this.props;\n        if (!record) return null;\n        const { basket } = record;\n        return (\n            <Paper className={classes.container}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>\n                                {translate(\n                                    'resources.commands.fields.basket.reference'\n                                )}\n                            </TableCell>\n                            <TableCell className={classes.rightAlignedCell}>\n                                {translate(\n                                    'resources.commands.fields.basket.unit_price'\n                                )}\n                            </TableCell>\n                            <TableCell className={classes.rightAlignedCell}>\n                                {translate(\n                                    'resources.commands.fields.basket.quantity'\n                                )}\n                            </TableCell>\n                            <TableCell className={classes.rightAlignedCell}>\n                                {translate(\n                                    'resources.commands.fields.basket.total'\n                                )}\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {basket.map(\n                            item =>\n                                products[item.product_id] && (\n                                    <TableRow key={item.product_id}>\n                                        <TableCell>\n                                            <Link\n                                                to={`/products/${\n                                                    item.product_id\n                                                }`}\n                                            >\n                                                {\n                                                    products[item.product_id]\n                                                        .reference\n                                                }\n                                            </Link>\n                                        </TableCell>\n                                        <TableCell\n                                            className={classes.rightAlignedCell}\n                                        >\n                                            {products[\n                                                item.product_id\n                                            ].price.toLocaleString(undefined, {\n                                                style: 'currency',\n                                                currency: 'USD',\n                                            })}\n                                        </TableCell>\n                                        <TableCell\n                                            className={classes.rightAlignedCell}\n                                        >\n                                            {item.quantity}\n                                        </TableCell>\n                                        <TableCell\n                                            className={classes.rightAlignedCell}\n                                        >\n                                            {(\n                                                products[item.product_id]\n                                                    .price * item.quantity\n                                            ).toLocaleString(undefined, {\n                                                style: 'currency',\n                                                currency: 'USD',\n                                            })}\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                        )}\n                        <TableRow>\n                            <TableCell colSpan={2} />\n                            <TableCell>\n                                {translate(\n                                    'resources.commands.fields.basket.sum'\n                                )}\n                            </TableCell>\n                            <TableCell className={classes.rightAlignedCell}>\n                                {record.total_ex_taxes.toLocaleString(\n                                    undefined,\n                                    {\n                                        style: 'currency',\n                                        currency: 'USD',\n                                    }\n                                )}\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2} />\n                            <TableCell>\n                                {translate(\n                                    'resources.commands.fields.basket.delivery'\n                                )}\n                            </TableCell>\n                            <TableCell className={classes.rightAlignedCell}>\n                                {record.delivery_fees.toLocaleString(\n                                    undefined,\n                                    { style: 'currency', currency: 'USD' }\n                                )}\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2} />\n                            <TableCell>\n                                {translate(\n                                    'resources.commands.fields.basket.tax_rate'\n                                )}\n                            </TableCell>\n                            <TableCell className={classes.rightAlignedCell}>\n                                {record.tax_rate.toLocaleString(undefined, {\n                                    style: 'percent',\n                                })}\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2} />\n                            <TableCell className={classes.boldCell}>\n                                {translate(\n                                    'resources.commands.fields.basket.total'\n                                )}\n                            </TableCell>\n                            <TableCell\n                                className={classnames(\n                                    classes.boldCell,\n                                    classes.rightAlignedCell\n                                )}\n                            >\n                                {record.total.toLocaleString(undefined, {\n                                    style: 'currency',\n                                    currency: 'USD',\n                                })}\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </Paper>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    const {\n        record: { basket },\n    } = props;\n    const productIds = basket.map(item => item.product_id);\n    return {\n        products: productIds\n            .map(productId => state.admin.resources.products.data[productId])\n            .filter(r => typeof r !== 'undefined')\n            .reduce((prev, next) => {\n                prev[next.id] = next;\n                return prev;\n            }, {}),\n    };\n};\n\nconst enhance = compose(\n    translate,\n    withStyles(styles),\n    connect(\n        mapStateToProps,\n        {\n            crudGetMany: crudGetManyAction,\n        }\n    )\n);\n\nexport default enhance(Basket);\n","import React from 'react';\nimport {\n    translate,\n    AutocompleteInput,\n    BooleanInput,\n    DateInput,\n    Edit,\n    ReferenceInput,\n    SelectInput,\n    SimpleForm,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport Basket from './Basket';\n\nconst OrderTitle = translate(({ record, translate }) => (\n    <span>\n        {translate('resources.commands.title', { reference: record.reference })}\n    </span>\n));\n\nconst editStyles = {\n    root: { alignItems: 'flex-start' },\n};\n\nconst OrderEdit = props => (\n    <Edit title={<OrderTitle />} aside={<Basket />} {...props}>\n        <SimpleForm>\n            <DateInput source=\"date\" />\n            <ReferenceInput source=\"customer_id\" reference=\"customers\">\n                <AutocompleteInput\n                    optionText={choice =>\n                        `${choice.first_name} ${choice.last_name}`\n                    }\n                />\n            </ReferenceInput>\n            <SelectInput\n                source=\"status\"\n                choices={[\n                    { id: 'delivered', name: 'delivered' },\n                    { id: 'ordered', name: 'ordered' },\n                    { id: 'cancelled', name: 'cancelled' },\n                    {\n                        id: 'unknown',\n                        name: 'unknown',\n                        disabled: true,\n                    },\n                ]}\n            />\n            <BooleanInput source=\"returned\" />\n        </SimpleForm>\n    </Edit>\n);\n\nexport default withStyles(editStyles)(OrderEdit);\n","import OrderIcon from '@material-ui/icons/AttachMoney';\n\nimport OrderList from './OrderList';\nimport OrderEdit from './OrderEdit';\n\nexport default {\n    list: OrderList,\n    edit: OrderEdit,\n    icon: OrderIcon,\n};\n","import React from 'react';\n\nconst AddressField = ({ record }) => (\n    <span>\n        {record.address}, {record.city} {record.zipcode}\n    </span>\n);\n\nexport default AddressField;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { ShowController, ReferenceField, TextField } from 'react-admin';\n\nimport Basket from '../orders/Basket';\n\nconst CustomerField = ({ record }) => (\n    <Typography>\n        {record.first_name} {record.last_name}\n        <br />\n        {record.address}\n        <br />\n        {record.city}, {record.zipcode}\n    </Typography>\n);\n\nconst InvoiceShow = props => (\n    <ShowController {...props} title=\" \">\n        {({ record }) =>\n            record && (\n                <Card style={{ width: 600, margin: 'auto' }}>\n                    <CardContent>\n                        <Grid container spacing={16}>\n                            <Grid item xs={6}>\n                                <Typography variant=\"title\" gutterBottom>\n                                    Posters Galore\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography\n                                    variant=\"title\"\n                                    gutterBottom\n                                    align=\"right\"\n                                >\n                                    Invoice {record.id}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <Grid container spacing={16}>\n                            <Grid item xs={12} align=\"right\">\n                                <ReferenceField\n                                    resource=\"invoices\"\n                                    reference=\"customers\"\n                                    source=\"customer_id\"\n                                    basePath=\"/invoices\"\n                                    record={record}\n                                    linkType={false}\n                                >\n                                    <CustomerField />\n                                </ReferenceField>\n                            </Grid>\n                        </Grid>\n                        <div style={{ height: 20 }}>&nbsp;</div>\n                        <Grid container spacing={16}>\n                            <Grid item xs={6}>\n                                <Typography\n                                    variant=\"title\"\n                                    gutterBottom\n                                    align=\"center\"\n                                >\n                                    Date{' '}\n                                </Typography>\n                                <Typography gutterBottom align=\"center\">\n                                    {new Date(record.date).toLocaleDateString()}\n                                </Typography>\n                            </Grid>\n\n                            <Grid item xs={5}>\n                                <Typography\n                                    variant=\"title\"\n                                    gutterBottom\n                                    align=\"center\"\n                                >\n                                    Order\n                                </Typography>\n                                <Typography gutterBottom align=\"center\">\n                                    <ReferenceField\n                                        resource=\"invoices\"\n                                        reference=\"commands\"\n                                        source=\"command_id\"\n                                        basePath=\"/invoices\"\n                                        record={record}\n                                        linkType={false}\n                                    >\n                                        <TextField source=\"reference\" />\n                                    </ReferenceField>\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                        <div style={{ margin: '10px 0' }}>\n                            <ReferenceField\n                                resource=\"invoices\"\n                                reference=\"commands\"\n                                source=\"command_id\"\n                                basePath=\"/invoices\"\n                                record={record}\n                                linkType={false}\n                            >\n                                <Basket />\n                            </ReferenceField>\n                        </div>\n                    </CardContent>\n                </Card>\n            )\n        }\n    </ShowController>\n);\n\nexport default InvoiceShow;\n","import React from 'react';\nimport {\n    List,\n    Datagrid,\n    TextField,\n    DateField,\n    ReferenceField,\n    NumberField,\n    Filter,\n    DateInput,\n} from 'react-admin';\n\nimport FullNameField from '../visitors/FullNameField';\nimport AddressField from '../visitors/AddressField';\nimport InvoiceShow from './InvoiceShow';\n\nconst ListFilters = props => (\n    <Filter {...props}>\n        <DateInput source=\"date_gte\" alwaysOn />\n        <DateInput source=\"date_lte\" alwaysOn />\n    </Filter>\n);\n\nconst InvoiceList = props => (\n    <List {...props} filters={<ListFilters />} perPage={25}>\n        <Datagrid rowClick=\"expand\" expand={<InvoiceShow />}>\n            <TextField source=\"id\" />\n            <DateField source=\"date\" />\n            <ReferenceField source=\"customer_id\" reference=\"customers\">\n                <FullNameField />\n            </ReferenceField>\n            <ReferenceField\n                source=\"customer_id\"\n                reference=\"customers\"\n                linkType={false}\n                label=\"resources.invoices.fields.address\"\n            >\n                <AddressField />\n            </ReferenceField>\n            <ReferenceField source=\"command_id\" reference=\"commands\">\n                <TextField source=\"reference\" />\n            </ReferenceField>\n            <NumberField source=\"total_ex_taxes\" />\n            <NumberField source=\"delivery_fees\" />\n            <NumberField source=\"taxes\" />\n            <NumberField source=\"total\" />\n        </Datagrid>\n    </List>\n);\n\nexport default InvoiceList;\n","import InvoiceIcon from '@material-ui/icons/LibraryBooks';\n\nimport InvoiceList from './InvoiceList';\n\nexport default {\n    list: InvoiceList,\n    icon: InvoiceIcon,\n};\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport MuiGridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { withStyles } from '@material-ui/core/styles';\nimport withWidth from '@material-ui/core/withWidth';\nimport { Link } from 'react-router-dom';\nimport { NumberField } from 'react-admin';\nimport { linkToRecord } from 'ra-core';\n\nconst styles = theme => ({\n    root: {\n        margin: '-2px',\n    },\n    gridList: {\n        width: '100%',\n        margin: 0,\n    },\n    tileBar: {\n        background:\n            'linear-gradient(to top, rgba(0,0,0,0.8) 0%,rgba(0,0,0,0.4) 70%,rgba(0,0,0,0) 100%)',\n    },\n    placeholder: {\n        backgroundColor: theme.palette.grey[300],\n        height: '100%',\n    },\n    price: {\n        display: 'inline',\n        fontSize: '1em',\n    },\n    link: {\n        color: '#fff',\n    },\n});\n\nconst getColsForWidth = width => {\n    if (width === 'xs') return 2;\n    if (width === 'sm') return 3;\n    if (width === 'md') return 4;\n    if (width === 'lg') return 5;\n    return 6;\n};\n\nconst times = (nbChildren, fn) =>\n    Array.from({ length: nbChildren }, (_, key) => fn(key));\n\nconst LoadingGridList = ({ width, classes, nbItems = 10 }) => (\n    <div className={classes.root}>\n        <MuiGridList\n            cellHeight={180}\n            cols={getColsForWidth(width)}\n            className={classes.gridList}\n        >\n            {' '}\n            {times(nbItems, key => (\n                <GridListTile key={key}>\n                    <div className={classes.placeholder} />\n                </GridListTile>\n            ))}\n        </MuiGridList>\n    </div>\n);\n\nconst LoadedGridList = ({ classes, ids, data, basePath, width }) => (\n    <div className={classes.root}>\n        <MuiGridList\n            cellHeight={180}\n            cols={getColsForWidth(width)}\n            className={classes.gridList}\n        >\n            {ids.map(id => (\n                <GridListTile\n                    component={Link}\n                    key={id}\n                    to={linkToRecord(basePath, data[id].id)}\n                >\n                    <img src={data[id].thumbnail} alt=\"\" />\n                    <GridListTileBar\n                        className={classes.tileBar}\n                        title={data[id].reference}\n                        subtitle={\n                            <span>\n                                {data[id].width}x{data[id].height},{' '}\n                                <NumberField\n                                    className={classes.price}\n                                    source=\"price\"\n                                    record={data[id]}\n                                    color=\"inherit\"\n                                    options={{\n                                        style: 'currency',\n                                        currency: 'USD',\n                                    }}\n                                />\n                            </span>\n                        }\n                    />\n                </GridListTile>\n            ))}\n        </MuiGridList>\n    </div>\n);\n\nconst GridList = ({ loadedOnce, ...props }) =>\n    loadedOnce ? <LoadedGridList {...props} /> : <LoadingGridList {...props} />;\n\nconst enhance = compose(\n    withWidth(),\n    withStyles(styles)\n);\n\nexport default enhance(GridList);\n","import React from 'react';\nimport {\n    translate,\n    Filter,\n    List,\n    NumberInput,\n    ReferenceInput,\n    SearchInput,\n    SelectInput,\n} from 'react-admin';\nimport Chip from '@material-ui/core/Chip';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport GridList from './GridList';\n\nconst quickFilterStyles = {\n    root: {\n        marginBottom: '0.7em',\n    },\n};\n\nconst QuickFilter = translate(\n    withStyles(quickFilterStyles)(({ classes, label, translate }) => (\n        <Chip className={classes.root} label={translate(label)} />\n    ))\n);\n\nexport const ProductFilter = props => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <ReferenceInput\n            source=\"category_id\"\n            reference=\"categories\"\n            sort={{ field: 'id', order: 'ASC' }}\n        >\n            <SelectInput source=\"name\" />\n        </ReferenceInput>\n        <NumberInput source=\"width_gte\" />\n        <NumberInput source=\"width_lte\" />\n        <NumberInput source=\"height_gte\" />\n        <NumberInput source=\"height_lte\" />\n        <QuickFilter\n            label=\"resources.products.fields.stock_lte\"\n            source=\"stock_lte\"\n            defaultValue={10}\n        />\n    </Filter>\n);\n\nconst ProductList = props => (\n    <List\n        {...props}\n        filters={<ProductFilter />}\n        perPage={20}\n        sort={{ field: 'id', order: 'ASC' }}\n    >\n        <GridList />\n    </List>\n);\n\nexport default ProductList;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n    root: { display: 'inline-block', marginTop: '1em', zIndex: 2 },\n    content: { padding: 0, '&:last-child': { padding: 0 } },\n    img: {\n        width: 'initial',\n        minWidth: 'initial',\n        maxWidth: '42em',\n        maxHeight: '15em',\n    },\n};\n\nconst Poster = withStyles(styles)(({ classes, record }) => (\n    <Card className={classes.root}>\n        <CardContent className={classes.content}>\n            <img src={record.image} alt=\"\" className={classes.img} />\n        </CardContent>\n    </Card>\n));\n\nexport default Poster;\n","import React from 'react';\nimport {\n    Create,\n    FormTab,\n    NumberInput,\n    ReferenceInput,\n    SelectInput,\n    TabbedForm,\n    TextInput,\n    required,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport RichTextInput from 'ra-input-rich-text';\n\nexport const styles = {\n    stock: { width: '5em' },\n    price: { width: '5em' },\n    width: { width: '5em' },\n    widthFormGroup: { display: 'inline-block' },\n    height: { width: '5em' },\n    heightFormGroup: { display: 'inline-block', marginLeft: 32 },\n};\n\nconst ProductCreate = ({ classes, ...props }) => (\n    <Create {...props}>\n        <TabbedForm>\n            <FormTab label=\"resources.products.tabs.image\">\n                <TextInput\n                    autoFocus\n                    source=\"image\"\n                    options={{ fullWidth: true }}\n                    validate={required()}\n                />\n                <TextInput\n                    source=\"thumbnail\"\n                    options={{ fullWidth: true }}\n                    validate={required()}\n                />\n            </FormTab>\n            <FormTab label=\"resources.products.tabs.details\" path=\"details\">\n                <TextInput source=\"reference\" validate={required()} />\n                <NumberInput\n                    source=\"price\"\n                    validate={required()}\n                    className={classes.price}\n                />\n                <NumberInput\n                    source=\"width\"\n                    validate={required()}\n                    className={classes.width}\n                    formClassName={classes.widthFormGroup}\n                />\n                <NumberInput\n                    source=\"height\"\n                    validate={required()}\n                    className={classes.height}\n                    formClassName={classes.heightFormGroup}\n                />\n                <ReferenceInput\n                    source=\"category_id\"\n                    reference=\"categories\"\n                    allowEmpty\n                >\n                    <SelectInput source=\"name\" />\n                </ReferenceInput>\n                <NumberInput\n                    source=\"stock\"\n                    validate={required()}\n                    className={classes.stock}\n                />\n            </FormTab>\n            <FormTab\n                label=\"resources.products.tabs.description\"\n                path=\"description\"\n            >\n                <RichTextInput source=\"description\" addLabel={false} />\n            </FormTab>\n        </TabbedForm>\n    </Create>\n);\n\nexport default withStyles(styles)(ProductCreate);\n","import React from 'react';\nimport {\n    Datagrid,\n    DateField,\n    Edit,\n    EditButton,\n    FormTab,\n    NumberInput,\n    Pagination,\n    ReferenceInput,\n    ReferenceManyField,\n    SelectInput,\n    TabbedForm,\n    TextField,\n    TextInput,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport RichTextInput from 'ra-input-rich-text';\n\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport StarRatingField from '../reviews/StarRatingField';\nimport Poster from './Poster';\nimport { styles as createStyles } from './ProductCreate';\n\nconst ProductTitle = ({ record }) => <span>Poster #{record.reference}</span>;\n\nconst styles = {\n    ...createStyles,\n    comment: {\n        maxWidth: '20em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n};\n\nconst ProductEdit = ({ classes, ...props }) => (\n    <Edit {...props} title={<ProductTitle />}>\n        <TabbedForm>\n            <FormTab label=\"resources.products.tabs.image\">\n                <Poster />\n                <TextInput source=\"image\" options={{ fullWidth: true }} />\n                <TextInput source=\"thumbnail\" options={{ fullWidth: true }} />\n            </FormTab>\n            <FormTab label=\"resources.products.tabs.details\" path=\"details\">\n                <TextInput source=\"reference\" />\n                <NumberInput source=\"price\" className={classes.price} />\n                <NumberInput\n                    source=\"width\"\n                    className={classes.width}\n                    formClassName={classes.widthFormGroup}\n                />\n                <NumberInput\n                    source=\"height\"\n                    className={classes.height}\n                    formClassName={classes.heightFormGroup}\n                />\n                <ReferenceInput source=\"category_id\" reference=\"categories\">\n                    <SelectInput source=\"name\" />\n                </ReferenceInput>\n                <NumberInput source=\"stock\" className={classes.stock} />\n            </FormTab>\n            <FormTab\n                label=\"resources.products.tabs.description\"\n                path=\"description\"\n            >\n                <RichTextInput source=\"description\" addLabel={false} />\n            </FormTab>\n            <FormTab label=\"resources.products.tabs.reviews\" path=\"reviews\">\n                <ReferenceManyField\n                    reference=\"reviews\"\n                    target=\"product_id\"\n                    addLabel={false}\n                    pagination={<Pagination />}\n                >\n                    <Datagrid>\n                        <DateField source=\"date\" />\n                        <CustomerReferenceField />\n                        <StarRatingField />\n                        <TextField\n                            source=\"comment\"\n                            cellClassName={classes.comment}\n                        />\n                        <TextField source=\"status\" />\n                        <EditButton />\n                    </Datagrid>\n                </ReferenceManyField>\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n);\n\nexport default withStyles(styles)(ProductEdit);\n","import ProductIcon from '@material-ui/icons/Collections';\nimport ProductList from './ProductList';\nimport ProductEdit from './ProductEdit';\nimport ProductCreate from './ProductCreate';\n\nexport default {\n    list: ProductList,\n    create: ProductCreate,\n    edit: ProductEdit,\n    icon: ProductIcon,\n};\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { translate } from 'react-admin';\nimport { stringify } from 'query-string';\n\nimport products from '../products';\n\nconst styles = {\n    icon: { paddingRight: '0.5em' },\n    link: {\n        display: 'inline-flex',\n        alignItems: 'center',\n    },\n};\n\nconst LinkToRelatedProducts = ({ classes, record, translate }) => (\n    <Button\n        size=\"small\"\n        color=\"primary\"\n        component={Link}\n        to={{\n            pathname: '/products',\n            search: stringify({\n                page: 1,\n                perPage: 25,\n                sort: 'id',\n                order: 'DESC',\n                filter: JSON.stringify({ category_id: record.id }),\n            }),\n        }}\n        className={classes.link}\n    >\n        <products.icon className={classes.icon} />\n        {translate('resources.categories.fields.products')}\n    </Button>\n);\n\nconst enhance = compose(\n    withStyles(styles),\n    translate\n);\nexport default enhance(LinkToRelatedProducts);\n","import React from 'react';\nimport { Datagrid, EditButton, List, TextField } from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport LinkToRelatedProducts from './LinkToRelatedProducts';\n\nconst styles = {\n    name: { padding: '0 12px 0 25px' },\n};\n\nconst CategoryList = ({ classes, ...props }) => (\n    <List {...props} sort={{ field: 'name', order: 'ASC' }}>\n        <Datagrid>\n            <TextField source=\"name\" className={classes.name} />\n            <LinkToRelatedProducts />\n            <EditButton />\n        </Datagrid>\n    </List>\n);\n\nexport default withStyles(styles)(CategoryList);\n","import React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst styles = {\n    root: { width: 25, maxWidth: 25, maxHeight: 25 },\n};\n\nconst ThumbnailField = withStyles(styles)(({ classes, record }) => (\n    <img src={record.thumbnail} className={classes.root} alt=\"\" />\n));\n\nexport default ThumbnailField;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ProductRefField = ({ record }) => (\n    <Link to={`products/${record.id}`}>{record.reference}</Link>\n);\n\nProductRefField.defaultProps = {\n    source: 'id',\n    label: 'Reference',\n};\n\nexport default ProductRefField;\n","import React from 'react';\nimport {\n    translate,\n    Datagrid,\n    Edit,\n    EditButton,\n    NumberField,\n    ReferenceManyField,\n    SimpleForm,\n    TextInput,\n} from 'react-admin';\n\nimport ThumbnailField from '../products/ThumbnailField';\nimport ProductRefField from '../products/ProductRefField';\n\nconst CategoryTitle = translate(({ record, translate }) => (\n    <span>\n        {translate('resources.categories.name', { smart_count: 1 })} &quot;\n        {record.name}&quot;\n    </span>\n));\n\nconst CategoryEdit = props => (\n    <Edit title={<CategoryTitle />} {...props}>\n        <SimpleForm>\n            <TextInput source=\"name\" />\n            <ReferenceManyField\n                reference=\"products\"\n                target=\"category_id\"\n                label=\"resources.categories.fields.products\"\n                perPage={5}\n            >\n                <Datagrid>\n                    <ThumbnailField />\n                    <ProductRefField source=\"reference\" />\n                    <NumberField\n                        source=\"price\"\n                        options={{ style: 'currency', currency: 'USD' }}\n                    />\n                    <NumberField\n                        source=\"width\"\n                        options={{ minimumFractionDigits: 2 }}\n                    />\n                    <NumberField\n                        source=\"height\"\n                        options={{ minimumFractionDigits: 2 }}\n                    />\n                    <NumberField source=\"stock\" />\n                    <EditButton />\n                </Datagrid>\n            </ReferenceManyField>\n        </SimpleForm>\n    </Edit>\n);\n\nexport default CategoryEdit;\n","import CategoryIcon from '@material-ui/icons/Bookmark';\n\nimport CategoryList from './CategoryList';\nimport CategoryEdit from './CategoryEdit';\n\nexport default {\n    list: CategoryList,\n    edit: CategoryEdit,\n    icon: CategoryIcon,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport { Button, startUndoable, crudUpdateMany } from 'react-admin';\n\nclass BulkAcceptButton extends Component {\n    handleClick = () => {\n        const { basePath, startUndoable, resource, selectedIds } = this.props;\n        startUndoable(\n            crudUpdateMany(\n                resource,\n                selectedIds,\n                { status: 'accepted' },\n                basePath\n            )\n        );\n    };\n\n    render() {\n        return (\n            <Button\n                label=\"resources.reviews.action.accept\"\n                onClick={this.handleClick}\n            >\n                <ThumbUp />\n            </Button>\n        );\n    }\n}\n\nBulkAcceptButton.propTypes = {\n    resource: PropTypes.string.isRequired,\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n    startUndoable: PropTypes.func.isRequired,\n};\n\nexport default connect(\n    undefined,\n    { startUndoable }\n)(BulkAcceptButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\nimport { Button, startUndoable, crudUpdateMany } from 'react-admin';\n\nclass BulkRejectButton extends Component {\n    handleClick = () => {\n        const { basePath, startUndoable, resource, selectedIds } = this.props;\n        startUndoable(\n            crudUpdateMany(\n                resource,\n                selectedIds,\n                { status: 'rejected' },\n                basePath\n            )\n        );\n    };\n\n    render() {\n        return (\n            <Button\n                label=\"resources.reviews.action.reject\"\n                onClick={this.handleClick}\n            >\n                <ThumbDown />\n            </Button>\n        );\n    }\n}\n\nBulkRejectButton.propTypes = {\n    resource: PropTypes.string.isRequired,\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n    startUndoable: PropTypes.func.isRequired,\n};\n\nexport default connect(\n    undefined,\n    { startUndoable }\n)(BulkRejectButton);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport {\n    linkToRecord,\n    ReferenceField,\n    FunctionField,\n    TextField,\n} from 'react-admin';\n\nimport AvatarField from '../visitors/AvatarField';\n\nconst styles = {\n    root: {\n        width: '100vw',\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'inherit',\n    },\n    inline: {\n        display: 'inline',\n    },\n};\n\nconst ReviewMobileList = ({\n    basePath,\n    classes = {},\n    className,\n    data,\n    ids,\n    isLoading,\n    total,\n}) =>\n    (isLoading || total > 0) && (\n        <List className={classes.root}>\n            {ids.map(id => (\n                <Link\n                    to={linkToRecord(basePath, id)}\n                    className={classes.link}\n                    key={id}\n                >\n                    <ListItem button>\n                        <ListItemAvatar>\n                            <ReferenceField\n                                record={data[id]}\n                                source=\"customer_id\"\n                                reference=\"customers\"\n                                basePath={basePath}\n                                linkType={false}\n                            >\n                                <AvatarField size={40} />\n                            </ReferenceField>\n                        </ListItemAvatar>\n                        <ListItemText\n                            primary={\n                                <Fragment>\n                                    <ReferenceField\n                                        record={data[id]}\n                                        source=\"customer_id\"\n                                        reference=\"customers\"\n                                        basePath={basePath}\n                                        linkType={false}\n                                    >\n                                        <FunctionField\n                                            render={record =>\n                                                `${record.first_name} ${\n                                                    record.last_name\n                                                }`\n                                            }\n                                            variant=\"subheading\"\n                                            className={classes.inline}\n                                        />\n                                    </ReferenceField>{' '}\n                                    on{' '}\n                                    <ReferenceField\n                                        record={data[id]}\n                                        source=\"product_id\"\n                                        reference=\"products\"\n                                        basePath={basePath}\n                                        linkType={false}\n                                    >\n                                        <TextField\n                                            source=\"reference\"\n                                            variant=\"subheading\"\n                                            className={classes.inline}\n                                        />\n                                    </ReferenceField>\n                                </Fragment>\n                            }\n                            secondary={data[id].comment}\n                            secondaryTypographyProps={{ noWrap: true }}\n                        />\n                    </ListItem>\n                </Link>\n            ))}\n        </List>\n    );\n\nReviewMobileList.propTypes = {\n    basePath: PropTypes.string,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    data: PropTypes.object,\n    hasBulkActions: PropTypes.bool.isRequired,\n    ids: PropTypes.array,\n    leftAvatar: PropTypes.func,\n    leftIcon: PropTypes.func,\n    linkType: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n        .isRequired,\n    onToggleItem: PropTypes.func,\n    primaryText: PropTypes.func,\n    rightAvatar: PropTypes.func,\n    rightIcon: PropTypes.func,\n    secondaryText: PropTypes.func,\n    selectedIds: PropTypes.arrayOf(PropTypes.any).isRequired,\n    tertiaryText: PropTypes.func,\n};\n\nReviewMobileList.defaultProps = {\n    linkType: 'edit',\n    hasBulkActions: false,\n    selectedIds: [],\n};\n\nexport default withStyles(styles)(ReviewMobileList);\n","import green from '@material-ui/core/colors/green';\nimport orange from '@material-ui/core/colors/orange';\nimport red from '@material-ui/core/colors/red';\n\nconst rowStyle = (record, index, defaultStyle = {}) => {\n    if (record.status === 'accepted')\n        return {\n            ...defaultStyle,\n            borderLeftColor: green[500],\n            borderLeftWidth: 5,\n            borderLeftStyle: 'solid',\n        };\n    if (record.status === 'pending')\n        return {\n            ...defaultStyle,\n            borderLeftColor: orange[500],\n            borderLeftWidth: 5,\n            borderLeftStyle: 'solid',\n        };\n    if (record.status === 'rejected')\n        return {\n            ...defaultStyle,\n            borderLeftColor: red[500],\n            borderLeftWidth: 5,\n            borderLeftStyle: 'solid',\n        };\n    return defaultStyle;\n};\n\nexport default rowStyle;\n","import React from 'react';\nimport { Datagrid, DateField, TextField } from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport ProductReferenceField from '../products/ProductReferenceField';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport StarRatingField from './StarRatingField';\n\nimport rowStyle from './rowStyle';\n\nconst listStyles = {\n    headerRow: {\n        borderLeftColor: 'white',\n        borderLeftWidth: 5,\n        borderLeftStyle: 'solid',\n    },\n    comment: {\n        maxWidth: '18em',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n};\n\nconst ReviewListDesktop = ({ classes, ...props }) => (\n    <Datagrid\n        rowClick=\"edit\"\n        rowStyle={rowStyle}\n        classes={{ headerRow: classes.headerRow }}\n        {...props}\n    >\n        <DateField source=\"date\" />\n        <CustomerReferenceField linkType={false} />\n        <ProductReferenceField linkType={false} />\n        <StarRatingField />\n        <TextField source=\"comment\" cellClassName={classes.comment} />\n        <TextField source=\"status\" />\n    </Datagrid>\n);\n\nexport default withStyles(listStyles)(ReviewListDesktop);\n","import React from 'react';\nimport {\n    AutocompleteInput,\n    DateInput,\n    Filter,\n    ReferenceInput,\n    SearchInput,\n    SelectInput,\n} from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst filterStyles = {\n    status: { width: 150 },\n};\n\nconst ReviewFilter = ({ classes, ...props }) => (\n    <Filter {...props}>\n        <SearchInput source=\"q\" alwaysOn />\n        <SelectInput\n            source=\"status\"\n            choices={[\n                { id: 'accepted', name: 'Accepted' },\n                { id: 'pending', name: 'Pending' },\n                { id: 'rejected', name: 'Rejected' },\n            ]}\n            className={classes.status}\n        />\n        <ReferenceInput source=\"customer_id\" reference=\"customers\">\n            <AutocompleteInput\n                optionText={choice =>\n                    `${choice.first_name} ${choice.last_name}`\n                }\n            />\n        </ReferenceInput>\n        <ReferenceInput source=\"product_id\" reference=\"products\">\n            <AutocompleteInput optionText=\"reference\" />\n        </ReferenceInput>\n        <DateInput source=\"date_gte\" />\n        <DateInput source=\"date_lte\" />\n    </Filter>\n);\n\nexport default withStyles(filterStyles)(ReviewFilter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { formValueSelector } from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport { translate, Mutation } from 'react-admin';\nimport compose from 'recompose/compose';\n\nconst sideEffects = {\n    onSuccess: {\n        notification: {\n            body: 'resources.reviews.notification.approved_success',\n            level: 'info',\n        },\n        redirectTo: '/reviews',\n    },\n    onFailure: {\n        notification: {\n            body: 'resources.reviews.notification.approved_error',\n            level: 'warning',\n        },\n    },\n};\n\n/**\n * This custom button demonstrate using <Mutation> to update data\n */\nconst AcceptButton = ({ record, translate }) =>\n    record && record.status === 'pending' ? (\n        <Mutation\n            type=\"UPDATE\"\n            resource=\"reviews\"\n            payload={{ id: record.id, data: { status: 'accepted' } }}\n            options={sideEffects}\n        >\n            {approve => (\n                <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    size=\"small\"\n                    onClick={approve}\n                >\n                    <ThumbUp\n                        color=\"primary\"\n                        style={{ paddingRight: '0.5em', color: 'green' }}\n                    />\n                    {translate('resources.reviews.action.accept')}\n                </Button>\n            )}\n        </Mutation>\n    ) : (\n        <span />\n    );\n\nAcceptButton.propTypes = {\n    record: PropTypes.object,\n    comment: PropTypes.string,\n    translate: PropTypes.func,\n};\n\nconst selector = formValueSelector('record-form');\n\nconst enhance = compose(\n    translate,\n    connect(state => ({\n        comment: selector(state, 'comment'),\n    }))\n);\n\nexport default enhance(AcceptButton);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { formValueSelector } from 'redux-form';\nimport Button from '@material-ui/core/Button';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\nimport { translate } from 'react-admin';\nimport compose from 'recompose/compose';\nimport { reviewReject as reviewRejectAction } from './reviewActions';\n\n/**\n * This custom button demonstrate using a custom action to update data\n */\nclass RejectButton extends Component {\n    handleReject = () => {\n        const { reviewReject, record, comment } = this.props;\n        reviewReject(record.id, { ...record, comment });\n    };\n\n    render() {\n        const { record, translate } = this.props;\n        return record && record.status === 'pending' ? (\n            <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                size=\"small\"\n                onClick={this.handleReject}\n            >\n                <ThumbDown\n                    color=\"primary\"\n                    style={{ paddingRight: '0.5em', color: 'red' }}\n                />\n                {translate('resources.reviews.action.reject')}\n            </Button>\n        ) : (\n            <span />\n        );\n    }\n}\n\nRejectButton.propTypes = {\n    comment: PropTypes.string,\n    record: PropTypes.object,\n    reviewReject: PropTypes.func,\n    translate: PropTypes.func,\n};\n\nconst selector = formValueSelector('record-form');\n\nconst enhance = compose(\n    translate,\n    connect(\n        state => ({\n            comment: selector(state, 'comment'),\n        }),\n        {\n            reviewReject: reviewRejectAction,\n        }\n    )\n);\n\nexport default enhance(RejectButton);\n","import React, { Fragment } from 'react';\nimport MuiToolbar from '@material-ui/core/Toolbar';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport { SaveButton, DeleteButton } from 'react-admin';\nimport AcceptButton from './AcceptButton';\nimport RejectButton from './RejectButton';\n\nconst styles = {\n    root: {\n        backgroundColor: 'white',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n};\n\nconst ReviewEditToolbar = ({\n    basePath,\n    classes,\n    handleSubmitWithRedirect,\n    invalid,\n    record,\n    resource,\n    saving,\n}) => (\n    <MuiToolbar className={classes.root}>\n        {record.status === 'pending' ? (\n            <Fragment>\n                <AcceptButton record={record} />\n                <RejectButton record={record} />\n            </Fragment>\n        ) : (\n            <Fragment>\n                <SaveButton\n                    handleSubmitWithRedirect={handleSubmitWithRedirect}\n                    invalid={invalid}\n                    saving={saving}\n                    redirect=\"list\"\n                    submitOnEnter={true}\n                />\n                <DeleteButton\n                    basePath={basePath}\n                    record={record}\n                    resource={resource}\n                />\n            </Fragment>\n        )}\n    </MuiToolbar>\n);\n\nexport default withStyles(styles)(ReviewEditToolbar);\n","import React from 'react';\nimport {\n    EditController,\n    LongTextInput,\n    SimpleForm,\n    DateField,\n} from 'react-admin';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport ProductReferenceField from '../products/ProductReferenceField';\nimport CustomerReferenceField from '../visitors/CustomerReferenceField';\nimport StarRatingField from './StarRatingField';\nimport ReviewEditToolbar from './ReviewEditToolbar';\n\nconst editStyle = theme => ({\n    root: {\n        paddingTop: 40,\n    },\n    title: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        margin: '1em',\n    },\n    form: {\n        [theme.breakpoints.up('xs')]: {\n            width: 400,\n        },\n        [theme.breakpoints.down('xs')]: {\n            width: '100vw',\n            marginTop: -30,\n        },\n    },\n    inlineField: {\n        display: 'inline-block',\n        width: '50%',\n    },\n});\n\nconst ReviewEdit = ({ classes, onCancel, ...props }) => (\n    <EditController {...props}>\n        {controllerProps =>\n            controllerProps.record ? (\n                <div className={classes.root}>\n                    <div className={classes.title}>\n                        <Typography variant=\"title\">\n                            {controllerProps.translate(\n                                'resources.reviews.detail'\n                            )}\n                        </Typography>\n                        <IconButton onClick={onCancel}>\n                            <CloseIcon />\n                        </IconButton>\n                    </div>\n                    <SimpleForm\n                        className={classes.form}\n                        basePath={controllerProps.basePath}\n                        record={controllerProps.record}\n                        save={controllerProps.save}\n                        version={controllerProps.version}\n                        redirect=\"list\"\n                        resource=\"reviews\"\n                        toolbar={<ReviewEditToolbar />}\n                    >\n                        <CustomerReferenceField\n                            formClassName={classes.inlineField}\n                        />\n\n                        <ProductReferenceField\n                            formClassName={classes.inlineField}\n                        />\n                        <DateField\n                            source=\"date\"\n                            formClassName={classes.inlineField}\n                        />\n                        <StarRatingField formClassName={classes.inlineField} />\n                        <LongTextInput source=\"comment\" rowsMax={15} />\n                    </SimpleForm>\n                </div>\n            ) : null\n        }\n    </EditController>\n);\n\nexport default withStyles(editStyle)(ReviewEdit);\n","import React, { Fragment, Component } from 'react';\nimport compose from 'recompose/compose';\nimport classnames from 'classnames';\nimport { BulkDeleteButton, List, Responsive } from 'react-admin';\nimport { connect } from 'react-redux';\nimport { push } from 'react-router-redux';\nimport { Route } from 'react-router';\nimport Drawer from '@material-ui/core/Drawer';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport BulkAcceptButton from './BulkAcceptButton';\nimport BulkRejectButton from './BulkRejectButton';\nimport ReviewListMobile from './ReviewListMobile';\nimport ReviewListDesktop from './ReviewListDesktop';\nimport ReviewFilter from './ReviewFilter';\nimport ReviewEdit from './ReviewEdit';\n\nconst ReviewsBulkActionButtons = props => (\n    <Fragment>\n        <BulkAcceptButton {...props} />\n        <BulkRejectButton {...props} />\n        <BulkDeleteButton {...props} />\n    </Fragment>\n);\n\nconst styles = theme =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        list: {\n            flexGrow: 1,\n            transition: theme.transitions.create(['all'], {\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            marginRight: 0,\n        },\n        listWithDrawer: {\n            marginRight: 400,\n        },\n    });\n\nclass ReviewList extends Component {\n    render() {\n        const { classes, ...props } = this.props;\n        return (\n            <div className={classes.root}>\n                <Route path=\"/reviews/:id\">\n                    {({ match }) => {\n                        const isMatch = !!(\n                            match &&\n                            match.params &&\n                            match.params.id !== 'create'\n                        );\n\n                        return (\n                            <Fragment>\n                                <List\n                                    {...props}\n                                    className={classnames(classes.list, {\n                                        [classes.listWithDrawer]: isMatch,\n                                    })}\n                                    bulkActionButtons={\n                                        <ReviewsBulkActionButtons />\n                                    }\n                                    filters={<ReviewFilter />}\n                                    perPage={25}\n                                    sort={{ field: 'date', order: 'DESC' }}\n                                >\n                                    <Responsive\n                                        xsmall={<ReviewListMobile />}\n                                        medium={<ReviewListDesktop />}\n                                    />\n                                </List>\n                                <Drawer\n                                    variant=\"persistent\"\n                                    open={isMatch}\n                                    anchor=\"right\"\n                                    onClose={this.handleClose}\n                                    classes={{\n                                        paper: classes.drawerPaper,\n                                    }}\n                                >\n                                    {/* To avoid any errors if the route does not match, we don't render at all the component in this case */}\n                                    {isMatch ? (\n                                        <ReviewEdit\n                                            id={match.params.id}\n                                            onCancel={this.handleClose}\n                                            {...props}\n                                        />\n                                    ) : null}\n                                </Drawer>\n                            </Fragment>\n                        );\n                    }}\n                </Route>\n            </div>\n        );\n    }\n\n    handleClose = () => {\n        this.props.push('/reviews');\n    };\n}\n\nexport default compose(\n    connect(\n        undefined,\n        { push }\n    ),\n    withStyles(styles)\n)(ReviewList);\n","import ReviewIcon from '@material-ui/icons/Comment';\nimport ReviewList from './ReviewList';\n\nexport default {\n    icon: ReviewIcon,\n    list: ReviewList,\n};\n","import React, { Fragment } from 'react';\nimport compose from 'recompose/compose';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport Collapse from '@material-ui/core/Collapse';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { translate } from 'react-admin';\n\nconst styles = {\n    listItem: {\n        paddingLeft: '1rem',\n    },\n    listItemText: {\n        paddingLeft: 2,\n        fontSize: '1rem',\n    },\n    sidebarIsOpen: {\n        paddingLeft: 25,\n        transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n    },\n    sidebarIsClosed: {\n        paddingLeft: 0,\n        transition: 'padding-left 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms',\n    },\n};\n\nconst SubMenu = ({\n    handleToggle,\n    sidebarIsOpen,\n    isOpen,\n    name,\n    icon,\n    classes,\n    children,\n    translate,\n}) => (\n    <Fragment>\n        <ListItem\n            dense\n            button\n            onClick={handleToggle}\n            className={classes.listItem}\n        >\n            <ListItemIcon>{isOpen ? <ExpandMore /> : icon}</ListItemIcon>\n            <ListItemText\n                inset\n                primary={isOpen ? translate(name) : ''}\n                secondary={isOpen ? '' : translate(name)}\n                className={classes.listItemText}\n            />\n        </ListItem>\n        <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n            <List\n                dense\n                component=\"div\"\n                disablePadding\n                className={\n                    sidebarIsOpen\n                        ? classes.sidebarIsOpen\n                        : classes.sidebarIsClosed\n                }\n            >\n                {children}\n            </List>\n            <Divider />\n        </Collapse>\n    </Fragment>\n);\n\nconst enhance = compose(\n    withStyles(styles),\n    translate\n);\n\nexport default enhance(SubMenu);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport LabelIcon from '@material-ui/icons/Label';\nimport { withRouter } from 'react-router-dom';\nimport {\n    translate,\n    DashboardMenuItem,\n    MenuItemLink,\n    Responsive,\n} from 'react-admin';\n\nimport visitors from '../visitors';\nimport orders from '../orders';\nimport invoices from '../invoices';\nimport products from '../products';\nimport categories from '../categories';\nimport reviews from '../reviews';\nimport SubMenu from './SubMenu';\n\nclass Menu extends Component {\n    state = {\n        menuCatalog: false,\n        menuSales: false,\n        menuCustomers: false,\n    };\n\n    static propTypes = {\n        onMenuClick: PropTypes.func,\n        logout: PropTypes.object,\n    };\n\n    handleToggle = menu => {\n        this.setState(state => ({ [menu]: !state[menu] }));\n    };\n\n    render() {\n        const { onMenuClick, open, logout, translate } = this.props;\n        return (\n            <div>\n                {' '}\n                <DashboardMenuItem onClick={onMenuClick} />\n                <SubMenu\n                    handleToggle={() => this.handleToggle('menuSales')}\n                    isOpen={this.state.menuSales}\n                    sidebarIsOpen={open}\n                    name=\"pos.menu.sales\"\n                    icon={<orders.icon />}\n                >\n                    <MenuItemLink\n                        to={`/commands`}\n                        primaryText={translate(`resources.commands.name`, {\n                            smart_count: 2,\n                        })}\n                        leftIcon={<orders.icon />}\n                        onClick={onMenuClick}\n                    />\n                    <MenuItemLink\n                        to={`/invoices`}\n                        primaryText={translate(`resources.invoices.name`, {\n                            smart_count: 2,\n                        })}\n                        leftIcon={<invoices.icon />}\n                        onClick={onMenuClick}\n                    />\n                </SubMenu>\n                <SubMenu\n                    handleToggle={() => this.handleToggle('menuCatalog')}\n                    isOpen={this.state.menuCatalog}\n                    sidebarIsOpen={open}\n                    name=\"pos.menu.catalog\"\n                    icon={<products.icon />}\n                >\n                    <MenuItemLink\n                        to={`/products`}\n                        primaryText={translate(`resources.products.name`, {\n                            smart_count: 2,\n                        })}\n                        leftIcon={<products.icon />}\n                        onClick={onMenuClick}\n                    />\n                    <MenuItemLink\n                        to={`/categories`}\n                        primaryText={translate(`resources.categories.name`, {\n                            smart_count: 2,\n                        })}\n                        leftIcon={<categories.icon />}\n                        onClick={onMenuClick}\n                    />\n                </SubMenu>\n                <SubMenu\n                    handleToggle={() => this.handleToggle('menuCustomer')}\n                    isOpen={this.state.menuCustomer}\n                    sidebarIsOpen={open}\n                    name=\"pos.menu.customers\"\n                    icon={<visitors.icon />}\n                >\n                    <MenuItemLink\n                        to={`/customers`}\n                        primaryText={translate(`resources.customers.name`, {\n                            smart_count: 2,\n                        })}\n                        leftIcon={<visitors.icon />}\n                        onClick={onMenuClick}\n                    />\n                    <MenuItemLink\n                        to={`/segments`}\n                        primaryText={translate(`resources.segments.name`, {\n                            smart_count: 2,\n                        })}\n                        leftIcon={<LabelIcon />}\n                        onClick={onMenuClick}\n                    />\n                </SubMenu>\n                <MenuItemLink\n                    to={`/reviews`}\n                    primaryText={translate(`resources.reviews.name`, {\n                        smart_count: 2,\n                    })}\n                    leftIcon={<reviews.icon />}\n                    onClick={onMenuClick}\n                />\n                <Responsive\n                    xsmall={\n                        <MenuItemLink\n                            to=\"/configuration\"\n                            primaryText={translate('pos.configuration')}\n                            leftIcon={<SettingsIcon />}\n                            onClick={onMenuClick}\n                        />\n                    }\n                    medium={null}\n                />\n                <Responsive\n                    small={logout}\n                    medium={null} // Pass null to render nothing on larger devices\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    open: state.admin.ui.sidebarOpen,\n    theme: state.theme,\n    locale: state.i18n.locale,\n});\n\nconst enhance = compose(\n    withRouter,\n    connect(\n        mapStateToProps,\n        {}\n    ),\n    translate\n);\n\nexport default enhance(Menu);\n","export const darkTheme = {\n    palette: {\n        type: 'dark', // Switching the dark mode on is a single property value change.\n    },\n};\n\nexport const lightTheme = {\n    palette: {\n        secondary: {\n            light: '#5f5fc4',\n            main: '#283593',\n            dark: '#001064',\n            contrastText: '#fff',\n        },\n    },\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Layout, Sidebar } from 'react-admin';\nimport AppBar from './AppBar';\nimport Menu from './Menu';\nimport { darkTheme, lightTheme } from './themes';\n\nconst CustomSidebar = props => <Sidebar {...props} size={200} />;\nconst CustomLayout = props => (\n    <Layout {...props} appBar={AppBar} sidebar={CustomSidebar} menu={Menu} />\n);\n\nexport default connect(\n    state => ({\n        theme: state.theme === 'dark' ? darkTheme : lightTheme,\n    }),\n    {}\n)(CustomLayout);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { propTypes, reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TextField from '@material-ui/core/TextField';\nimport {\n    MuiThemeProvider,\n    createMuiTheme,\n    withStyles,\n} from '@material-ui/core/styles';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport { Notification, translate, userLogin } from 'react-admin';\n\nimport { lightTheme } from './themes';\n\nconst styles = theme => ({\n    main: {\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        background: 'url(https://source.unsplash.com/random/1600x900)',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n    },\n    card: {\n        minWidth: 300,\n        marginTop: '6em',\n    },\n    avatar: {\n        margin: '1em',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    icon: {\n        backgroundColor: theme.palette.secondary.main,\n    },\n    hint: {\n        marginTop: '1em',\n        display: 'flex',\n        justifyContent: 'center',\n        color: theme.palette.grey[500],\n    },\n    form: {\n        padding: '0 1em 1em 1em',\n    },\n    input: {\n        marginTop: '1em',\n    },\n    actions: {\n        padding: '0 1em 1em 1em',\n    },\n});\n\n// see http://redux-form.com/6.4.3/examples/material-ui/\nconst renderInput = ({\n    meta: { touched, error } = {},\n    input: { ...inputProps },\n    ...props\n}) => (\n    <TextField\n        error={!!(touched && error)}\n        helperText={touched && error}\n        {...inputProps}\n        {...props}\n        fullWidth\n    />\n);\n\nclass Login extends Component {\n    login = auth =>\n        this.props.userLogin(\n            auth,\n            this.props.location.state\n                ? this.props.location.state.nextPathname\n                : '/'\n        );\n\n    render() {\n        const { classes, handleSubmit, isLoading, translate } = this.props;\n        return (\n            <div className={classes.main}>\n                <Card className={classes.card}>\n                    <div className={classes.avatar}>\n                        <Avatar className={classes.icon}>\n                            <LockIcon />\n                        </Avatar>\n                    </div>\n                    <form onSubmit={handleSubmit(this.login)}>\n                        <div className={classes.hint}>Hint: demo / demo</div>\n                        <div className={classes.form}>\n                            <div className={classes.input}>\n                                <Field\n                                    autoFocus\n                                    name=\"username\"\n                                    component={renderInput}\n                                    label={translate('ra.auth.username')}\n                                    disabled={isLoading}\n                                />\n                            </div>\n                            <div className={classes.input}>\n                                <Field\n                                    name=\"password\"\n                                    component={renderInput}\n                                    label={translate('ra.auth.password')}\n                                    type=\"password\"\n                                    disabled={isLoading}\n                                />\n                            </div>\n                        </div>\n                        <CardActions className={classes.actions}>\n                            <Button\n                                variant=\"raised\"\n                                type=\"submit\"\n                                color=\"secondary\"\n                                disabled={isLoading}\n                                className={classes.button}\n                                fullWidth\n                            >\n                                {isLoading && (\n                                    <CircularProgress size={25} thickness={2} />\n                                )}\n                                {translate('ra.auth.sign_in')}\n                            </Button>\n                        </CardActions>\n                    </form>\n                </Card>\n                <Notification />\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    ...propTypes,\n    authProvider: PropTypes.func,\n    classes: PropTypes.object,\n    previousRoute: PropTypes.string,\n    translate: PropTypes.func.isRequired,\n    userLogin: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({ isLoading: state.admin.loading > 0 });\n\nconst enhance = compose(\n    translate,\n    reduxForm({\n        form: 'signIn',\n        validate: (values, props) => {\n            const errors = {};\n            const { translate } = props;\n            if (!values.username) {\n                errors.username = translate('ra.validation.required');\n            }\n            if (!values.password) {\n                errors.password = translate('ra.validation.required');\n            }\n            return errors;\n        },\n    }),\n    connect(\n        mapStateToProps,\n        { userLogin }\n    ),\n    withStyles(styles)\n);\n\nconst EnhancedLogin = enhance(Login);\n\n// We need to put the MuiThemeProvider decoration in another component\n// Because otherwise the withStyles() HOC used in EnhancedLogin won't get\n// the right theme\nconst LoginWithTheme = props => (\n    <MuiThemeProvider theme={createMuiTheme(lightTheme)}>\n        <EnhancedLogin {...props} />\n    </MuiThemeProvider>\n);\n\nexport default LoginWithTheme;\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport HomeIcon from '@material-ui/icons/Home';\nimport CodeIcon from '@material-ui/icons/Code';\nimport { withStyles } from '@material-ui/core/styles';\nimport { translate } from 'react-admin';\n\nconst styles = {\n    media: {\n        height: '18em',\n    },\n};\n\nconst mediaUrl = `https://marmelab.com/posters/beard-${parseInt(\n    Math.random() * 10,\n    10\n) + 1}.jpeg`;\n\nconst Welcome = ({ classes, translate }) => (\n    <Card>\n        <CardMedia image={mediaUrl} className={classes.media} />\n        <CardContent>\n            <Typography variant=\"headline\" component=\"h2\">\n                {translate('pos.dashboard.welcome.title')}\n            </Typography>\n            <Typography component=\"p\">\n                {translate('pos.dashboard.welcome.subtitle')}\n            </Typography>\n        </CardContent>\n        <CardActions style={{ justifyContent: 'flex-end' }}>\n            <Button href=\"https://marmelab.com/react-admin\">\n                <HomeIcon style={{ paddingRight: '0.5em' }} />\n                {translate('pos.dashboard.welcome.aor_button')}\n            </Button>\n            <Button href=\"https://github.com/marmelab/react-admin/tree/master/examples/demo\">\n                <CodeIcon style={{ paddingRight: '0.5em' }} />\n                {translate('pos.dashboard.welcome.demo_button')}\n            </Button>\n        </CardActions>\n    </Card>\n);\n\nconst enhance = compose(\n    withStyles(styles),\n    translate\n);\n\nexport default enhance(Welcome);\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    card: {\n        float: 'left',\n        margin: '-20px 20px 0 15px',\n        zIndex: 100,\n        borderRadius: 3,\n    },\n    icon: {\n        float: 'right',\n        width: 54,\n        height: 54,\n        padding: 14,\n        color: '#fff',\n    },\n};\n\nconst CardIcon = ({ Icon, classes, bgColor }) => (\n    <Card className={classes.card} style={{ backgroundColor: bgColor }}>\n        <Icon className={classes.icon} />\n    </Card>\n);\n\nexport default withStyles(styles)(CardIcon);\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport DollarIcon from '@material-ui/icons/AttachMoney';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { translate } from 'react-admin';\n\nimport CardIcon from './CardIcon';\n\nconst styles = {\n    main: {\n        flex: '1',\n        marginRight: '1em',\n        marginTop: 20,\n    },\n    card: {\n        overflow: 'inherit',\n        textAlign: 'right',\n        padding: 16,\n        minHeight: 52,\n    },\n};\n\nconst MonthlyRevenue = ({ value, translate, classes }) => (\n    <div className={classes.main}>\n        <CardIcon Icon={DollarIcon} bgColor=\"#31708f\" />\n        <Card className={classes.card}>\n            <Typography className={classes.title} color=\"textSecondary\">\n                {translate('pos.dashboard.monthly_revenue')}\n            </Typography>\n            <Typography variant=\"headline\" component=\"h2\">\n                {value}\n            </Typography>\n        </Card>\n    </div>\n);\n\nconst enhance = compose(\n    withStyles(styles),\n    translate\n);\n\nexport default enhance(MonthlyRevenue);\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { translate } from 'react-admin';\n\nimport CardIcon from './CardIcon';\n\nconst styles = {\n    main: {\n        flex: '1',\n        marginLeft: '1em',\n        marginTop: 20,\n    },\n    card: {\n        overflow: 'inherit',\n        textAlign: 'right',\n        padding: 16,\n        minHeight: 52,\n    },\n};\n\nconst NbNewOrders = ({ value, translate, classes }) => (\n    <div className={classes.main}>\n        <CardIcon Icon={ShoppingCartIcon} bgColor=\"#ff9800\" />\n        <Card className={classes.card}>\n            <Typography className={classes.title} color=\"textSecondary\">\n                {translate('pos.dashboard.new_orders')}\n            </Typography>\n            <Typography variant=\"headline\" component=\"h2\">\n                {value}\n            </Typography>\n        </Card>\n    </div>\n);\n\nconst enhance = compose(\n    withStyles(styles),\n    translate\n);\n\nexport default enhance(NbNewOrders);\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { translate } from 'react-admin';\n\nconst style = theme => ({\n    root: {\n        flex: 1,\n    },\n    avatar: {\n        background: theme.palette.background.avatar,\n    },\n    cost: {\n        marginRight: '1em',\n        color: theme.palette.text.primary,\n    },\n});\n\nconst PendingOrders = ({ orders = [], customers = {}, translate, classes }) => (\n    <Card className={classes.root}>\n        <CardHeader title={translate('pos.dashboard.pending_orders')} />\n        <List dense={true}>\n            {orders.map(record => (\n                <ListItem\n                    key={record.id}\n                    button\n                    component={Link}\n                    to={`/commands/${record.id}`}\n                >\n                    {customers[record.customer_id] ? (\n                        <Avatar\n                            className={classes.avatar}\n                            src={`${\n                                customers[record.customer_id].avatar\n                            }?size=32x32`}\n                        />\n                    ) : (\n                        <Avatar />\n                    )}\n                    <ListItemText\n                        primary={new Date(record.date).toLocaleString('en-GB')}\n                        secondary={translate('pos.dashboard.order.items', {\n                            smart_count: record.basket.length,\n                            nb_items: record.basket.length,\n                            customer_name: customers[record.customer_id]\n                                ? `${\n                                      customers[record.customer_id].first_name\n                                  } ${customers[record.customer_id].last_name}`\n                                : '',\n                        })}\n                    />\n                    <ListItemSecondaryAction>\n                        <span className={classes.cost}>{record.total}$</span>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            ))}\n        </List>\n    </Card>\n);\n\nconst enhance = compose(\n    withStyles(style),\n    translate\n);\n\nexport default enhance(PendingOrders);\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport Divider from '@material-ui/core/Divider';\nimport { Link } from 'react-router-dom';\nimport { translate } from 'react-admin';\n\nimport CardIcon from './CardIcon';\n\nimport StarRatingField from '../reviews/StarRatingField';\n\nconst styles = theme => ({\n    main: {\n        flex: '1',\n        marginRight: '1em',\n        marginTop: 20,\n    },\n    titleLink: { textDecoration: 'none', color: 'inherit' },\n    card: {\n        padding: '16px 0',\n        overflow: 'inherit',\n        textAlign: 'right',\n    },\n    title: {\n        padding: '0 16px',\n    },\n    value: {\n        padding: '0 16px',\n        minHeight: 48,\n    },\n    avatar: {\n        background: theme.palette.background.avatar,\n    },\n    listItemText: {\n        overflowY: 'hidden',\n        height: '4em',\n        display: '-webkit-box',\n        WebkitLineClamp: 2,\n        WebkitBoxOrient: 'vertical',\n    },\n});\n\nconst location = {\n    pathname: 'reviews',\n    query: { filter: JSON.stringify({ status: 'pending' }) },\n};\n\nconst PendingReviews = ({\n    reviews = [],\n    customers = {},\n    nb,\n    translate,\n    classes,\n}) => (\n    <div className={classes.main}>\n        <CardIcon Icon={CommentIcon} bgColor=\"#f44336\" />\n        <Card className={classes.card}>\n            <Typography className={classes.title} color=\"textSecondary\">\n                {translate('pos.dashboard.pending_reviews')}\n            </Typography>\n            <Typography\n                variant=\"headline\"\n                component=\"h2\"\n                className={classes.value}\n            >\n                <Link to={location} className={classes.titleLink}>\n                    {nb}\n                </Link>\n            </Typography>\n            <Divider />\n            <List>\n                {reviews.map(record => (\n                    <ListItem\n                        key={record.id}\n                        button\n                        component={Link}\n                        to={`/reviews/${record.id}`}\n                    >\n                        {customers[record.customer_id] ? (\n                            <Avatar\n                                src={`${\n                                    customers[record.customer_id].avatar\n                                }?size=32x32`}\n                                className={classes.avatar}\n                            />\n                        ) : (\n                            <Avatar />\n                        )}\n\n                        <ListItemText\n                            primary={<StarRatingField record={record} />}\n                            secondary={record.comment}\n                            className={classes.listItemText}\n                            style={{ paddingRight: 0 }}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n        </Card>\n    </div>\n);\n\nconst enhance = compose(\n    withStyles(styles),\n    translate\n);\n\nexport default enhance(PendingReviews);\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport CustomerIcon from '@material-ui/icons/PersonAdd';\nimport Divider from '@material-ui/core/Divider';\nimport { Link } from 'react-router-dom';\nimport { translate } from 'react-admin';\n\nimport CardIcon from './CardIcon';\n\nconst styles = theme => ({\n    main: {\n        flex: '1',\n        marginLeft: '1em',\n        marginTop: 20,\n    },\n    card: {\n        padding: '16px 0',\n        overflow: 'inherit',\n        textAlign: 'right',\n    },\n    title: {\n        padding: '0 16px',\n    },\n    value: {\n        padding: '0 16px',\n        minHeight: 48,\n    },\n    avatar: {\n        background: theme.palette.background.avatar,\n    },\n    listItemText: {\n        paddingRight: 0,\n    },\n});\n\nconst NewCustomers = ({ visitors = [], nb, translate, classes }) => (\n    <div className={classes.main}>\n        <CardIcon Icon={CustomerIcon} bgColor=\"#4caf50\" />\n        <Card className={classes.card}>\n            <Typography className={classes.title} color=\"textSecondary\">\n                {translate('pos.dashboard.new_customers')}\n            </Typography>\n            <Typography\n                variant=\"headline\"\n                component=\"h2\"\n                className={classes.value}\n            >\n                {nb}\n            </Typography>\n            <Divider />\n            <List>\n                {visitors.map(record => (\n                    <ListItem\n                        button\n                        to={`/customers/${record.id}`}\n                        component={Link}\n                        key={record.id}\n                    >\n                        <Avatar\n                            src={`${record.avatar}?size=32x32`}\n                            className={classes.avatar}\n                        />\n                        <ListItemText\n                            primary={`${record.first_name} ${record.last_name}`}\n                            className={classes.listItemText}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n        </Card>\n    </div>\n);\n\nconst enhance = compose(\n    withStyles(styles),\n    translate\n);\n\nexport default enhance(NewCustomers);\n","import React, { Component } from 'react';\nimport { GET_LIST, GET_MANY, Responsive, withDataProvider } from 'react-admin';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\n\nimport Welcome from './Welcome';\nimport MonthlyRevenue from './MonthlyRevenue';\nimport NbNewOrders from './NbNewOrders';\nimport PendingOrders from './PendingOrders';\nimport PendingReviews from './PendingReviews';\nimport NewCustomers from './NewCustomers';\n\nconst styles = {\n    flex: { display: 'flex' },\n    flexColumn: { display: 'flex', flexDirection: 'column' },\n    leftCol: { flex: 1, marginRight: '1em' },\n    rightCol: { flex: 1, marginLeft: '1em' },\n    singleCol: { marginTop: '2em', marginBottom: '2em' },\n};\n\nclass Dashboard extends Component {\n    state = {};\n\n    componentDidMount() {\n        this.fetchData();\n    }\n\n    componentDidUpdate(prevProps) {\n        // handle refresh\n        if (this.props.version !== prevProps.version) {\n            this.fetchData();\n        }\n    }\n\n    fetchData() {\n        this.fetchOrders();\n        this.fetchReviews();\n        this.fetchCustomers();\n    }\n\n    async fetchOrders() {\n        const { dataProvider } = this.props;\n        const aMonthAgo = new Date();\n        aMonthAgo.setDate(aMonthAgo.getDate() - 30);\n        const { data: recentOrders } = await dataProvider(\n            GET_LIST,\n            'commands',\n            {\n                filter: { date_gte: aMonthAgo.toISOString() },\n                sort: { field: 'date', order: 'DESC' },\n                pagination: { page: 1, perPage: 50 },\n            }\n        );\n        const aggregations = recentOrders\n            .filter(order => order.status !== 'cancelled')\n            .reduce(\n                (stats, order) => {\n                    if (order.status !== 'cancelled') {\n                        stats.revenue += order.total;\n                        stats.nbNewOrders++;\n                    }\n                    if (order.status === 'ordered') {\n                        stats.pendingOrders.push(order);\n                    }\n                    return stats;\n                },\n                {\n                    revenue: 0,\n                    nbNewOrders: 0,\n                    pendingOrders: [],\n                }\n            );\n        this.setState({\n            revenue: aggregations.revenue.toLocaleString(undefined, {\n                style: 'currency',\n                currency: 'USD',\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 0,\n            }),\n            nbNewOrders: aggregations.nbNewOrders,\n            pendingOrders: aggregations.pendingOrders,\n        });\n        const { data: customers } = await dataProvider(GET_MANY, 'customers', {\n            ids: aggregations.pendingOrders.map(order => order.customer_id),\n        });\n        this.setState({\n            pendingOrdersCustomers: customers.reduce((prev, customer) => {\n                prev[customer.id] = customer; // eslint-disable-line no-param-reassign\n                return prev;\n            }, {}),\n        });\n    }\n\n    async fetchReviews() {\n        const { dataProvider } = this.props;\n        const { data: reviews } = await dataProvider(GET_LIST, 'reviews', {\n            filter: { status: 'pending' },\n            sort: { field: 'date', order: 'DESC' },\n            pagination: { page: 1, perPage: 100 },\n        });\n        const nbPendingReviews = reviews.reduce(nb => ++nb, 0);\n        const pendingReviews = reviews.slice(0, Math.min(10, reviews.length));\n        this.setState({ pendingReviews, nbPendingReviews });\n        const { data: customers } = await dataProvider(GET_MANY, 'customers', {\n            ids: pendingReviews.map(review => review.customer_id),\n        });\n        this.setState({\n            pendingReviewsCustomers: customers.reduce((prev, customer) => {\n                prev[customer.id] = customer; // eslint-disable-line no-param-reassign\n                return prev;\n            }, {}),\n        });\n    }\n\n    async fetchCustomers() {\n        const { dataProvider } = this.props;\n        const aMonthAgo = new Date();\n        aMonthAgo.setDate(aMonthAgo.getDate() - 30);\n        const { data: newCustomers } = await dataProvider(\n            GET_LIST,\n            'customers',\n            {\n                filter: {\n                    has_ordered: true,\n                    first_seen_gte: aMonthAgo.toISOString(),\n                },\n                sort: { field: 'first_seen', order: 'DESC' },\n                pagination: { page: 1, perPage: 100 },\n            }\n        );\n        this.setState({\n            newCustomers,\n            nbNewCustomers: newCustomers.reduce(nb => ++nb, 0),\n        });\n    }\n\n    render() {\n        const {\n            nbNewCustomers,\n            nbNewOrders,\n            nbPendingReviews,\n            newCustomers,\n            pendingOrders,\n            pendingOrdersCustomers,\n            pendingReviews,\n            pendingReviewsCustomers,\n            revenue,\n        } = this.state;\n        return (\n            <Responsive\n                xsmall={\n                    <div>\n                        <div style={styles.flexColumn}>\n                            <div style={{ marginBottom: '2em' }}>\n                                <Welcome />\n                            </div>\n                            <div style={styles.flex}>\n                                <MonthlyRevenue value={revenue} />\n                                <NbNewOrders value={nbNewOrders} />\n                            </div>\n                            <div style={styles.singleCol}>\n                                <PendingOrders\n                                    orders={pendingOrders}\n                                    customers={pendingOrdersCustomers}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                }\n                small={\n                    <div style={styles.flexColumn}>\n                        <div style={styles.singleCol}>\n                            <Welcome />\n                        </div>\n                        <div style={styles.flex}>\n                            <MonthlyRevenue value={revenue} />\n                            <NbNewOrders value={nbNewOrders} />\n                        </div>\n                        <div style={styles.singleCol}>\n                            <PendingOrders\n                                orders={pendingOrders}\n                                customers={pendingOrdersCustomers}\n                            />\n                        </div>\n                    </div>\n                }\n                medium={\n                    <div style={styles.flex}>\n                        <div style={styles.leftCol}>\n                            <div style={styles.flex}>\n                                <MonthlyRevenue value={revenue} />\n                                <NbNewOrders value={nbNewOrders} />\n                            </div>\n                            <div style={styles.singleCol}>\n                                <Welcome />\n                            </div>\n                            <div style={styles.singleCol}>\n                                <PendingOrders\n                                    orders={pendingOrders}\n                                    customers={pendingOrdersCustomers}\n                                />\n                            </div>\n                        </div>\n                        <div style={styles.rightCol}>\n                            <div style={styles.flex}>\n                                <PendingReviews\n                                    nb={nbPendingReviews}\n                                    reviews={pendingReviews}\n                                    customers={pendingReviewsCustomers}\n                                />\n                                <NewCustomers\n                                    nb={nbNewCustomers}\n                                    visitors={newCustomers}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                }\n            />\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    version: state.admin.ui.viewVersion,\n});\n\nexport default compose(\n    connect(mapStateToProps),\n    withDataProvider\n)(Dashboard);\n","import DashboardComponent from './Dashboard';\n\nexport const Dashboard = DashboardComponent;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { translate, changeLocale, Title } from 'react-admin';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport compose from 'recompose/compose';\nimport { changeTheme } from './actions';\n\nconst styles = {\n    label: { width: '10em', display: 'inline-block' },\n    button: { margin: '1em' },\n};\n\nconst Configuration = ({\n    classes,\n    theme,\n    locale,\n    changeTheme,\n    changeLocale,\n    translate,\n}) => (\n    <Card>\n        <Title title={translate('pos.configuration')} />\n        <CardContent>\n            <div className={classes.label}>{translate('pos.theme.name')}</div>\n            <Button\n                variant=\"raised\"\n                className={classes.button}\n                color={theme === 'light' ? 'primary' : 'default'}\n                onClick={() => changeTheme('light')}\n            >\n                {translate('pos.theme.light')}\n            </Button>\n            <Button\n                variant=\"raised\"\n                className={classes.button}\n                color={theme === 'dark' ? 'primary' : 'default'}\n                onClick={() => changeTheme('dark')}\n            >\n                {translate('pos.theme.dark')}\n            </Button>\n        </CardContent>\n        <CardContent>\n            <div className={classes.label}>{translate('pos.language')}</div>\n            <Button\n                variant=\"raised\"\n                className={classes.button}\n                color={locale === 'en' ? 'primary' : 'default'}\n                onClick={() => changeLocale('en')}\n            >\n                en\n            </Button>\n            <Button\n                variant=\"raised\"\n                className={classes.button}\n                color={locale === 'fr' ? 'primary' : 'default'}\n                onClick={() => changeLocale('fr')}\n            >\n                fr\n            </Button>\n        </CardContent>\n    </Card>\n);\n\nconst mapStateToProps = state => ({\n    theme: state.theme,\n    locale: state.i18n.locale,\n});\n\nconst enhance = compose(\n    connect(\n        mapStateToProps,\n        {\n            changeLocale,\n            changeTheme,\n        }\n    ),\n    translate,\n    withStyles(styles)\n);\n\nexport default enhance(Configuration);\n","import React from 'react';\nimport compose from 'recompose/compose';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { translate } from 'react-admin';\nimport { stringify } from 'query-string';\n\nimport visitors from '../visitors';\n\nconst styles = {\n    icon: { paddingRight: '0.5em' },\n    link: {\n        display: 'inline-flex',\n        alignItems: 'center',\n    },\n};\n\nconst LinkToRelatedCustomers = ({ classes, segment, translate }) => (\n    <Button\n        size=\"small\"\n        color=\"primary\"\n        component={Link}\n        to={{\n            pathname: '/customers',\n            search: stringify({\n                page: 1,\n                perPage: 25,\n                filter: JSON.stringify({ groups: segment }),\n            }),\n        }}\n        className={classes.link}\n    >\n        <visitors.icon className={classes.icon} />\n        {translate('resources.segments.fields.customers')}\n    </Button>\n);\n\nconst enhance = compose(\n    withStyles(styles),\n    translate\n);\nexport default enhance(LinkToRelatedCustomers);\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { translate, Title } from 'react-admin';\n\nimport LinkToRelatedCustomers from './LinkToRelatedCustomers';\nimport segments from './data';\n\nconst Segments = ({ translate }) => (\n    <Card>\n        <Title title={translate('resources.segments.name')} />\n        <Table>\n            <TableHead>\n                <TableRow>\n                    <TableCell>\n                        {translate('resources.segments.fields.name')}\n                    </TableCell>\n                    <TableCell />\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {segments.map(segment => (\n                    <TableRow key={segment.id}>\n                        <TableCell>{translate(segment.name)}</TableCell>\n                        <TableCell>\n                            <LinkToRelatedCustomers segment={segment.id} />\n                        </TableCell>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n    </Card>\n);\n\nexport default translate(Segments);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Configuration from './configuration/Configuration';\nimport Segments from './segments/Segments';\n\nexport default [\n    <Route exact path=\"/configuration\" component={Configuration} />,\n    <Route exact path=\"/segments\" component={Segments} />,\n];\n","import englishMessages from 'ra-language-english';\n\nexport default {\n    ...englishMessages,\n    pos: {\n        search: 'Search',\n        configuration: 'Configuration',\n        language: 'Language',\n        theme: {\n            name: 'Theme',\n            light: 'Light',\n            dark: 'Dark',\n        },\n        dashboard: {\n            monthly_revenue: 'Monthly Revenue',\n            new_orders: 'New Orders',\n            pending_reviews: 'Pending Reviews',\n            new_customers: 'New Customers',\n            pending_orders: 'Pending Orders',\n            order: {\n                items:\n                    'by %{customer_name}, one item |||| by %{customer_name}, %{nb_items} items',\n            },\n            welcome: {\n                title: 'Welcome to react-admin demo',\n                subtitle:\n                    \"This is the admin of an imaginary poster shop. Feel free to explore and modify the data - it's local to your computer, and will reset each time you reload.\",\n                aor_button: 'react-admin site',\n                demo_button: 'Source for this demo',\n            },\n        },\n        menu: {\n            sales: 'Sales',\n            catalog: 'Catalog',\n            customers: 'Customers',\n        },\n    },\n    resources: {\n        customers: {\n            name: 'Customer |||| Customers',\n            fields: {\n                commands: 'Orders',\n                groups: 'Segments',\n                last_seen_gte: 'Visited Since',\n                name: 'Name',\n                total_spent: 'Total spent',\n            },\n            tabs: {\n                identity: 'Identity',\n                address: 'Address',\n                orders: 'Orders',\n                reviews: 'Reviews',\n                stats: 'Stats',\n            },\n            page: {\n                delete: 'Delete Customer',\n            },\n        },\n        commands: {\n            name: 'Order |||| Orders',\n            title: 'Order %{reference}',\n            fields: {\n                basket: {\n                    delivery: 'Delivery',\n                    reference: 'Reference',\n                    quantity: 'Quantity',\n                    sum: 'Sum',\n                    tax_rate: 'Tax Rate',\n                    total: 'Total',\n                    unit_price: 'Unit Price',\n                },\n                customer_id: 'Customer',\n                date_gte: 'Passed Since',\n                date_lte: 'Passed Before',\n                total_gte: 'Min amount',\n                status: 'Status',\n                returned: 'Returned',\n            },\n        },\n        invoices: {\n            name: 'Invoice |||| Invoices',\n            fields: {\n                date: 'Invoice date',\n                customer_id: 'Customer',\n                command_id: 'Order',\n                date_gte: 'Passed Since',\n                date_lte: 'Passed Before',\n                total_gte: 'Min amount',\n                address: 'Address',\n            },\n        },\n        products: {\n            name: 'Poster |||| Posters',\n            fields: {\n                category_id: 'Category',\n                height_gte: 'Min height',\n                height_lte: 'Max height',\n                height: 'Height',\n                image: 'Image',\n                price: 'Price',\n                reference: 'Reference',\n                stock_lte: 'Low Stock',\n                stock: 'Stock',\n                thumbnail: 'Thumbnail',\n                width_gte: 'Min width',\n                width_lte: 'Max width',\n                width: 'Width',\n            },\n            tabs: {\n                image: 'Image',\n                details: 'Details',\n                description: 'Description',\n                reviews: 'Reviews',\n            },\n        },\n        categories: {\n            name: 'Category |||| Categories',\n            fields: {\n                products: 'Products',\n            },\n        },\n        reviews: {\n            name: 'Review |||| Reviews',\n            detail: 'Review detail',\n            fields: {\n                customer_id: 'Customer',\n                command_id: 'Order',\n                product_id: 'Product',\n                date_gte: 'Posted since',\n                date_lte: 'Posted before',\n                date: 'Date',\n                comment: 'Comment',\n                rating: 'Rating',\n            },\n            action: {\n                accept: 'Accept',\n                reject: 'Reject',\n            },\n            notification: {\n                approved_success: 'Review approved',\n                approved_error: 'Error: Review not approved',\n                rejected_success: 'Review rejected',\n                rejected_error: 'Error: Review not rejected',\n            },\n        },\n        segments: {\n            name: 'Segments',\n            fields: {\n                customers: 'Customers',\n                name: 'Name',\n            },\n            data: {\n                compulsive: 'Compulsive',\n                collector: 'Collector',\n                ordered_once: 'Ordered once',\n                regular: 'Regular',\n                returns: 'Returns',\n                reviewer: 'Reviewer',\n            },\n        },\n    },\n};\n","export default type => {\n    switch (type) {\n        case 'graphql':\n            return import('./graphql').then(factory => factory.default());\n        default:\n            return import('./rest').then(provider => provider.default);\n    }\n};\n","export default type => {\n    switch (type) {\n        case 'graphql':\n            return import('./graphql').then(factory => factory.default());\n        default:\n            return import('./rest').then(factory => factory.default());\n    }\n};\n","import React, { Component } from 'react';\nimport { Admin, Resource } from 'react-admin';\n\nimport './App.css';\n\nimport authProvider from './authProvider';\nimport sagas from './sagas';\nimport themeReducer from './themeReducer';\nimport { Login, Layout } from './layout';\nimport { Dashboard } from './dashboard';\nimport customRoutes from './routes';\nimport englishMessages from './i18n/en';\n\nimport visitors from './visitors';\nimport orders from './orders';\nimport products from './products';\nimport invoices from './invoices';\nimport categories from './categories';\nimport reviews from './reviews';\n\nimport dataProviderFactory from './dataProvider';\nimport fakeServerFactory from './fakeServer';\n\nconst i18nProvider = locale => {\n    if (locale === 'fr') {\n        return import('./i18n/fr').then(messages => messages.default);\n    }\n\n    // Always fallback on english\n    return englishMessages;\n};\n\nclass App extends Component {\n    state = { dataProvider: null };\n\n    async componentWillMount() {\n        this.restoreFetch = await fakeServerFactory(\n            process.env.REACT_APP_DATA_PROVIDER\n        );\n\n        const dataProvider = await dataProviderFactory(\n            process.env.REACT_APP_DATA_PROVIDER\n        );\n\n        this.setState({ dataProvider });\n    }\n\n    componentWillUnmount() {\n        this.restoreFetch();\n    }\n\n    render() {\n        const { dataProvider } = this.state;\n\n        if (!dataProvider) {\n            return (\n                <div className=\"loader-container\">\n                    <div className=\"loader\">Loading...</div>\n                </div>\n            );\n        }\n\n        console.log(dataProvider);\n        debugger;\n\n        return (\n            <Admin\n                title=\"\"\n                dataProvider={dataProvider}\n                customReducers={{ theme: themeReducer }}\n                customSagas={sagas}\n                customRoutes={customRoutes}\n                authProvider={authProvider}\n                dashboard={Dashboard}\n                loginPage={Login}\n                appLayout={Layout}\n                locale=\"en\"\n                i18nProvider={i18nProvider}\n            >\n                <Resource name=\"customers\" {...visitors} />\n                <Resource\n                    name=\"commands\"\n                    {...orders}\n                    options={{ label: 'Orders' }}\n                />\n                <Resource name=\"invoices\" {...invoices} />\n                <Resource name=\"products\" {...products} />\n                <Resource name=\"categories\" {...categories} />\n                <Resource name=\"reviews\" {...reviews} />\n            </Admin>\n        );\n    }\n}\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}